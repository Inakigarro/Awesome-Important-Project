{
    "pipes": [],
    "interfaces": [
        {
            "name": "AppState",
            "id": "interface-AppState-194f424626766fa0ca152923aa5689bd39625979812ab5e32d78260c2ea17124d4de8981773c7fd571aafe9875efcd713af666f730c89a36bc0c0a995d6284ac",
            "file": "src/app/state/app.reducer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { createReducer, on } from \"@ngrx/store\";\r\nimport { appInit, appInitSuccess, appInitFailure } from \"./app.actions\";\r\n\r\nexport interface AppState {\r\n\tinitialized: boolean;\r\n\terror: string | null;\r\n}\r\n\r\nexport const initialAppState: AppState = {\r\n\tinitialized: false,\r\n\terror: null,\r\n};\r\n\r\nexport const appReducer = createReducer(\r\n\tinitialAppState,\r\n\ton(appInit, (state) => ({ ...state, initialized: false, error: null })),\r\n\ton(appInitSuccess, (state) => ({ ...state, initialized: true, error: null })),\r\n\ton(appInitFailure, (state, { error }) => ({\r\n\t\t...state,\r\n\t\tinitialized: false,\r\n\t\terror,\r\n\t}))\r\n);\r\n",
            "properties": [
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "initialized",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "AuthResponse",
            "id": "interface-AuthResponse-fbb1b33d3e693b62eb9ac85a18cb81df5ef5c1d12b467db2d1a5e77d18617aecb2553ebee6c5779de18e16cb2f236738daba43967f2fabe5e7af334c8aabc449",
            "file": "src/app/auth/models.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface UserData {\r\n\tuserName: string;\r\n\temail: string;\r\n\troles: string[];\r\n\tsocio: {\r\n\t\tid: string;\r\n\t\tnumeroSocio: number;\r\n\t\tnombre: string;\r\n\t\tapellido: string;\r\n\t\ttelefono: string;\r\n\t\temail: string;\r\n\t};\r\n}\r\n\r\n/// Login.\r\nexport interface LoginRequest {\r\n\temail: string;\r\n\tpassword: string;\r\n}\r\n\r\nexport interface AuthResponse {\r\n\ttoken: string;\r\n\trefreshToken: string;\r\n\tuserName: string;\r\n\troles: string[];\r\n\tsocio: {\r\n\t\tid: string;\r\n\t\tnumeroSocio: number;\r\n\t\tnombre: string;\r\n\t\tapellido: string;\r\n\t\ttelefono: string;\r\n\t\temail: string;\r\n\t};\r\n}\r\n\r\n/// Register.\r\nexport interface RegisterRequest {\r\n\tnombre: string;\r\n\tapellido: string;\r\n\ttelefono: string;\r\n\tusername: string;\r\n\temail: string;\r\n\tpassword: string;\r\n}\r\n\r\nexport interface OperationResult {\r\n\tsuccess: boolean;\r\n\tmessage: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "refreshToken",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "roles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "socio",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "token",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "userName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "AuthState",
            "id": "interface-AuthState-76a7fc1e203d082c941a3b3f99b5205e4275ac482fa8497c7a3798dc38c18bd4d1a90b1cf5d57d574529134b54210e8a13bf4021fe9e686b33d19b57ceb06683",
            "file": "src/app/auth/state/auth.reducer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { createReducer, on } from \"@ngrx/store\";\r\nimport * as AuthActions from \"./auth.actions\";\r\nimport { UserData } from \"../models\";\r\n\r\nexport interface AuthState {\r\n\ttoken: string | null;\r\n\trefreshToken: string | null;\r\n\tuserData: UserData | null;\r\n\tloading: boolean;\r\n}\r\n\r\nexport const initialAuthState: AuthState = {\r\n\ttoken: null,\r\n\trefreshToken: null,\r\n\tuserData: null,\r\n\tloading: false,\r\n};\r\n\r\nexport const authReducer = createReducer(\r\n\tinitialAuthState,\r\n\ton(AuthActions.LoginActions.success, (state, action) => ({\r\n\t\t...state,\r\n\t\ttoken: action.token,\r\n\t\trefreshToken: action.refreshToken,\r\n\t\tuserData: action.userData,\r\n\t\tloading: false,\r\n\t})),\r\n\ton(AuthActions.setAuthTokens, (state, { token, refreshToken }) => ({\r\n\t\t...state,\r\n\t\ttoken,\r\n\t\trefreshToken,\r\n\t})),\r\n\ton(AuthActions.clearAuth, () => initialAuthState),\r\n\ton(AuthActions.setUserData, (state, { userData }) => ({\r\n\t\t...state,\r\n\t\tuserData,\r\n\t})),\r\n\ton(AuthActions.loadUserFromToken, (state) => ({ ...state, loading: true })),\r\n\ton(AuthActions.loadUserFromTokenSuccess, (state, { userData }) => ({\r\n\t\t...state,\r\n\t\tuserData,\r\n\t\tloading: false,\r\n\t})),\r\n\ton(AuthActions.loadUserFromTokenFailure, (state) => ({\r\n\t\t...state,\r\n\t\tuserData: null,\r\n\t\tloading: false,\r\n\t}))\r\n);\r\n",
            "properties": [
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "refreshToken",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "token",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "userData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserData | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ButtonBase",
            "id": "interface-ButtonBase-41ba8fd24a415700f91584f3c230b6bf151b95dad15fd78a874dcc2cabab81b5fc6f8813483d5b2a9e0ebcf937c423c85a41d20da7a31afe509d89b10cad6f14",
            "file": "src/app/components/buttons/button.interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ButtonBase {\r\n\tlabel: string;\r\n\ticon?: string;\r\n\ttype?: \"button\" | \"submit\" | \"reset\";\r\n\tcolor?: \"primary\" | \"accent\" | \"warn\" | \"neutral\" | string;\r\n\tkind?: \"main\" | \"secondary\" | \"tertiary\";\r\n\tdisabled?: boolean;\r\n\tloading?: boolean;\r\n}\r\n\r\nexport interface ButtonWithId extends ButtonBase {\r\n\tid: string;\r\n}\r\n\r\nexport interface ButtonClickEvent {\r\n\tbutton: ButtonWithId;\r\n\tindex?: number;\r\n\tcontext?: any;\r\n}\r\n\r\n// Para compatibilidad con los botones del topbar\r\nexport type TopbarButton = ButtonWithId;\r\nexport type TopbarButtonClickEvent = ButtonClickEvent;\r\n\r\nexport type LoginButton = ButtonWithId;\r\nexport type RegisterButton = ButtonWithId;\r\n",
            "properties": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"primary\" | \"accent\" | \"warn\" | \"neutral\" | string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "kind",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"main\" | \"secondary\" | \"tertiary\"",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"button\" | \"submit\" | \"reset\"",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ButtonClickEvent",
            "id": "interface-ButtonClickEvent-41ba8fd24a415700f91584f3c230b6bf151b95dad15fd78a874dcc2cabab81b5fc6f8813483d5b2a9e0ebcf937c423c85a41d20da7a31afe509d89b10cad6f14",
            "file": "src/app/components/buttons/button.interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ButtonBase {\r\n\tlabel: string;\r\n\ticon?: string;\r\n\ttype?: \"button\" | \"submit\" | \"reset\";\r\n\tcolor?: \"primary\" | \"accent\" | \"warn\" | \"neutral\" | string;\r\n\tkind?: \"main\" | \"secondary\" | \"tertiary\";\r\n\tdisabled?: boolean;\r\n\tloading?: boolean;\r\n}\r\n\r\nexport interface ButtonWithId extends ButtonBase {\r\n\tid: string;\r\n}\r\n\r\nexport interface ButtonClickEvent {\r\n\tbutton: ButtonWithId;\r\n\tindex?: number;\r\n\tcontext?: any;\r\n}\r\n\r\n// Para compatibilidad con los botones del topbar\r\nexport type TopbarButton = ButtonWithId;\r\nexport type TopbarButtonClickEvent = ButtonClickEvent;\r\n\r\nexport type LoginButton = ButtonWithId;\r\nexport type RegisterButton = ButtonWithId;\r\n",
            "properties": [
                {
                    "name": "button",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ButtonWithId",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "context",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "index",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 17
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ButtonWithId",
            "id": "interface-ButtonWithId-41ba8fd24a415700f91584f3c230b6bf151b95dad15fd78a874dcc2cabab81b5fc6f8813483d5b2a9e0ebcf937c423c85a41d20da7a31afe509d89b10cad6f14",
            "file": "src/app/components/buttons/button.interfaces.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ButtonBase {\r\n\tlabel: string;\r\n\ticon?: string;\r\n\ttype?: \"button\" | \"submit\" | \"reset\";\r\n\tcolor?: \"primary\" | \"accent\" | \"warn\" | \"neutral\" | string;\r\n\tkind?: \"main\" | \"secondary\" | \"tertiary\";\r\n\tdisabled?: boolean;\r\n\tloading?: boolean;\r\n}\r\n\r\nexport interface ButtonWithId extends ButtonBase {\r\n\tid: string;\r\n}\r\n\r\nexport interface ButtonClickEvent {\r\n\tbutton: ButtonWithId;\r\n\tindex?: number;\r\n\tcontext?: any;\r\n}\r\n\r\n// Para compatibilidad con los botones del topbar\r\nexport type TopbarButton = ButtonWithId;\r\nexport type TopbarButtonClickEvent = ButtonClickEvent;\r\n\r\nexport type LoginButton = ButtonWithId;\r\nexport type RegisterButton = ButtonWithId;\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [
                "ButtonBase"
            ]
        },
        {
            "name": "Cancha",
            "id": "interface-Cancha-77016abe113553c835609b03c634b4273acc77d1bb440f48e766fce30596e9966a1f780cd97011d73d3ca7dbd164d8ecea303b679822a213b7a520d4f18aff7b",
            "file": "src/app/modulos/canchas/models/models.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface CanchaDto {\r\n\tid: number;\r\n\ttipoSuelo: number;\r\n}\r\n\r\nexport interface Cancha {\r\n\tid: number;\r\n\ttipoSuelo: string;\r\n}\r\n\r\nexport enum TipoSuelo {\r\n\t\"Polvo de Ladrillo\" = 1,\r\n\t\"Hormigon\" = 2,\r\n\t\"Cesped\" = 3,\r\n}\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "tipoSuelo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "CanchaDto",
            "id": "interface-CanchaDto-77016abe113553c835609b03c634b4273acc77d1bb440f48e766fce30596e9966a1f780cd97011d73d3ca7dbd164d8ecea303b679822a213b7a520d4f18aff7b",
            "file": "src/app/modulos/canchas/models/models.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface CanchaDto {\r\n\tid: number;\r\n\ttipoSuelo: number;\r\n}\r\n\r\nexport interface Cancha {\r\n\tid: number;\r\n\ttipoSuelo: string;\r\n}\r\n\r\nexport enum TipoSuelo {\r\n\t\"Polvo de Ladrillo\" = 1,\r\n\t\"Hormigon\" = 2,\r\n\t\"Cesped\" = 3,\r\n}\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "tipoSuelo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "CanchasPagedResult",
            "id": "interface-CanchasPagedResult-a38735bd22c670a75aa6d198497e5ff202adcb7018b41caab3191c0e83901feeaf16f8c42ec3880e3d0385da7fa22e775cf1ee28ba225591fca02efff96047b4",
            "file": "src/app/modulos/canchas/models/ObtenerCanchasRequest.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CanchaDto } from \"./models\";\r\n\r\nexport interface ObtenerCanchasRequest {\r\n\tpageNumber: number;\r\n\tpageSize: number;\r\n}\r\n\r\nexport interface CanchasPagedResult {\r\n\titems: CanchaDto[];\r\n\ttotalCount: number;\r\n}\r\n",
            "properties": [
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CanchaDto[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "totalCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "CanchasState",
            "id": "interface-CanchasState-79a6bc249255d323bccb5c4d971d9f3937bf03fb77d08442f679dc5f1e7e6e248571d3613f5b5366fa55930f7e4910c79b6868434e052868f27614f9c7da1535",
            "file": "src/app/modulos/canchas/state/canchas.reducer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Cancha, CanchaDto } from \"../models/models\";\r\nimport { createReducer, on } from \"@ngrx/store\";\r\nimport { canchasLoaded } from \"./canchas.actions\";\r\n\r\nexport interface CanchasState {\r\n\tcanchas: Cancha[];\r\n\tpageNumber: number;\r\n\tpageSize: number;\r\n\ttotalCount: number;\r\n\tloading: boolean;\r\n\terror: string | null;\r\n}\r\n\r\nexport const initialCanchasState: CanchasState = {\r\n\tcanchas: [],\r\n\tpageNumber: 1,\r\n\tpageSize: 10,\r\n\ttotalCount: 0,\r\n\tloading: false,\r\n\terror: null,\r\n};\r\n\r\nexport const canchasReducer = createReducer(\r\n\tinitialCanchasState,\r\n\ton(canchasLoaded, (state, action) => ({\r\n\t\t...state,\r\n\t\tcanchas: action.canchas,\r\n\t\ttotalCount: action.totalCount,\r\n\t}))\r\n);\r\n",
            "properties": [
                {
                    "name": "canchas",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Cancha[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "pageNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "pageSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "totalCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ListColumn",
            "id": "interface-ListColumn-fcc4ac3027bcb9f9174393b96719b0c528559318685db44633a3c91dbcd62abcffeb2d2c93fdc4d5ab779704b20b34a69095fb10ffba3247ab46ef8218177bfe",
            "file": "src/app/components/list/models.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ListColumn<T> {\r\n\tproperty: keyof T;\r\n\theader: string;\r\n\tclasses: string[];\r\n}\r\n\r\nexport type ListRow<T> = T;\r\n",
            "properties": [
                {
                    "name": "classes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "header",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "property",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "LoginRequest",
            "id": "interface-LoginRequest-fbb1b33d3e693b62eb9ac85a18cb81df5ef5c1d12b467db2d1a5e77d18617aecb2553ebee6c5779de18e16cb2f236738daba43967f2fabe5e7af334c8aabc449",
            "file": "src/app/auth/models.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface UserData {\r\n\tuserName: string;\r\n\temail: string;\r\n\troles: string[];\r\n\tsocio: {\r\n\t\tid: string;\r\n\t\tnumeroSocio: number;\r\n\t\tnombre: string;\r\n\t\tapellido: string;\r\n\t\ttelefono: string;\r\n\t\temail: string;\r\n\t};\r\n}\r\n\r\n/// Login.\r\nexport interface LoginRequest {\r\n\temail: string;\r\n\tpassword: string;\r\n}\r\n\r\nexport interface AuthResponse {\r\n\ttoken: string;\r\n\trefreshToken: string;\r\n\tuserName: string;\r\n\troles: string[];\r\n\tsocio: {\r\n\t\tid: string;\r\n\t\tnumeroSocio: number;\r\n\t\tnombre: string;\r\n\t\tapellido: string;\r\n\t\ttelefono: string;\r\n\t\temail: string;\r\n\t};\r\n}\r\n\r\n/// Register.\r\nexport interface RegisterRequest {\r\n\tnombre: string;\r\n\tapellido: string;\r\n\ttelefono: string;\r\n\tusername: string;\r\n\temail: string;\r\n\tpassword: string;\r\n}\r\n\r\nexport interface OperationResult {\r\n\tsuccess: boolean;\r\n\tmessage: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "NavigationState",
            "id": "interface-NavigationState-bba4f6536152ccaa18b975fa9ce446a270f9ce9ad8aef26135ddc4971d5facca5f484f16ff8fa0b3379d184395c027946dab60199af4cb297cfb7845e2e0b839",
            "file": "src/app/navigation.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\nimport {\r\n\tRouter,\r\n\tNavigationEnd,\r\n\tEvent as NavigationEvent,\r\n} from \"@angular/router\";\r\nimport { filter, pairwise, startWith, map } from \"rxjs/operators\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\n\r\nexport interface NavigationState {\r\n\tpreviousUrl: string | null;\r\n\tcurrentUrl: string;\r\n\tnextUrl: string | null;\r\n\tisSubroute: boolean;\r\n\tisFullRouteChange: boolean;\r\n}\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class NavigationService {\r\n\tprivate previousUrl: string | null = null;\r\n\tprivate currentUrl: string = \"\";\r\n\tprivate nextUrl: string | null = null;\r\n\tprivate navigationState$ = new BehaviorSubject<NavigationState>({\r\n\t\tpreviousUrl: null,\r\n\t\tcurrentUrl: \"\",\r\n\t\tnextUrl: null,\r\n\t\tisSubroute: false,\r\n\t\tisFullRouteChange: false,\r\n\t});\r\n\r\n\tconstructor(private router: Router) {\r\n\t\tthis.router.events\r\n\t\t\t.pipe(\r\n\t\t\t\tfilter(\r\n\t\t\t\t\t(event: NavigationEvent): event is NavigationEnd =>\r\n\t\t\t\t\t\tevent instanceof NavigationEnd\r\n\t\t\t\t),\r\n\t\t\t\tstartWith({ urlAfterRedirects: this.router.url } as NavigationEnd),\r\n\t\t\t\tpairwise()\r\n\t\t\t)\r\n\t\t\t.subscribe(([prev, curr]: [NavigationEnd, NavigationEnd]) => {\r\n\t\t\t\tthis.previousUrl = prev.urlAfterRedirects;\r\n\t\t\t\tthis.currentUrl = curr.urlAfterRedirects;\r\n\t\t\t\tthis.nextUrl = null;\r\n\t\t\t\tconst isSubroute = this.isSubroute(this.previousUrl, this.currentUrl);\r\n\t\t\t\tconst isFullRouteChange = !isSubroute;\r\n\t\t\t\tthis.navigationState$.next({\r\n\t\t\t\t\tpreviousUrl: this.previousUrl,\r\n\t\t\t\t\tcurrentUrl: this.currentUrl,\r\n\t\t\t\t\tnextUrl: null,\r\n\t\t\t\t\tisSubroute,\r\n\t\t\t\t\tisFullRouteChange,\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t}\r\n\r\n\tpublic getNavigationState() {\r\n\t\treturn this.navigationState$.asObservable();\r\n\t}\r\n\r\n\tpublic getCurrentUrl(): string {\r\n\t\treturn this.currentUrl;\r\n\t}\r\n\r\n\tpublic getPreviousUrl(): string | null {\r\n\t\treturn this.previousUrl;\r\n\t}\r\n\r\n\tpublic navigate(url: string): void {\r\n\t\tthis.nextUrl = url;\r\n\t\tconst isSubroute = this.isSubroute(this.currentUrl, url);\r\n\t\tconst isFullRouteChange = !isSubroute;\r\n\t\tthis.navigationState$.next({\r\n\t\t\tpreviousUrl: this.currentUrl,\r\n\t\t\tcurrentUrl: url,\r\n\t\t\tnextUrl: url,\r\n\t\t\tisSubroute,\r\n\t\t\tisFullRouteChange,\r\n\t\t});\r\n\t\tthis.router.navigateByUrl(url);\r\n\t}\r\n\r\n\tprivate isSubroute(from: string | null, to: string): boolean {\r\n\t\tif (!from) return false;\r\n\t\t// Considera subruta si el inicio de la ruta es igual y solo cambia el segmento final\r\n\t\tconst fromSegments = from.split(\"/\").filter(Boolean);\r\n\t\tconst toSegments = to.split(\"/\").filter(Boolean);\r\n\t\tif (fromSegments.length === 0 || toSegments.length === 0) return false;\r\n\t\tif (fromSegments[0] !== toSegments[0]) return false;\r\n\t\t// Si solo cambia el último segmento o se agrega uno, es subruta\r\n\t\tif (\r\n\t\t\ttoSegments.length > fromSegments.length &&\r\n\t\t\ttoSegments.slice(0, fromSegments.length).join(\"/\") ===\r\n\t\t\t\tfromSegments.join(\"/\")\r\n\t\t) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (\r\n\t\t\tfromSegments.length > toSegments.length &&\r\n\t\t\tfromSegments.slice(0, toSegments.length).join(\"/\") ===\r\n\t\t\t\ttoSegments.join(\"/\")\r\n\t\t) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n}\r\n",
            "properties": [
                {
                    "name": "currentUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "isFullRouteChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "isSubroute",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "nextUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "previousUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ObtenerCanchasRequest",
            "id": "interface-ObtenerCanchasRequest-a38735bd22c670a75aa6d198497e5ff202adcb7018b41caab3191c0e83901feeaf16f8c42ec3880e3d0385da7fa22e775cf1ee28ba225591fca02efff96047b4",
            "file": "src/app/modulos/canchas/models/ObtenerCanchasRequest.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CanchaDto } from \"./models\";\r\n\r\nexport interface ObtenerCanchasRequest {\r\n\tpageNumber: number;\r\n\tpageSize: number;\r\n}\r\n\r\nexport interface CanchasPagedResult {\r\n\titems: CanchaDto[];\r\n\ttotalCount: number;\r\n}\r\n",
            "properties": [
                {
                    "name": "pageNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "pageSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "OperationResult",
            "id": "interface-OperationResult-fbb1b33d3e693b62eb9ac85a18cb81df5ef5c1d12b467db2d1a5e77d18617aecb2553ebee6c5779de18e16cb2f236738daba43967f2fabe5e7af334c8aabc449",
            "file": "src/app/auth/models.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface UserData {\r\n\tuserName: string;\r\n\temail: string;\r\n\troles: string[];\r\n\tsocio: {\r\n\t\tid: string;\r\n\t\tnumeroSocio: number;\r\n\t\tnombre: string;\r\n\t\tapellido: string;\r\n\t\ttelefono: string;\r\n\t\temail: string;\r\n\t};\r\n}\r\n\r\n/// Login.\r\nexport interface LoginRequest {\r\n\temail: string;\r\n\tpassword: string;\r\n}\r\n\r\nexport interface AuthResponse {\r\n\ttoken: string;\r\n\trefreshToken: string;\r\n\tuserName: string;\r\n\troles: string[];\r\n\tsocio: {\r\n\t\tid: string;\r\n\t\tnumeroSocio: number;\r\n\t\tnombre: string;\r\n\t\tapellido: string;\r\n\t\ttelefono: string;\r\n\t\temail: string;\r\n\t};\r\n}\r\n\r\n/// Register.\r\nexport interface RegisterRequest {\r\n\tnombre: string;\r\n\tapellido: string;\r\n\ttelefono: string;\r\n\tusername: string;\r\n\temail: string;\r\n\tpassword: string;\r\n}\r\n\r\nexport interface OperationResult {\r\n\tsuccess: boolean;\r\n\tmessage: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "success",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 48
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "RegisterRequest",
            "id": "interface-RegisterRequest-fbb1b33d3e693b62eb9ac85a18cb81df5ef5c1d12b467db2d1a5e77d18617aecb2553ebee6c5779de18e16cb2f236738daba43967f2fabe5e7af334c8aabc449",
            "file": "src/app/auth/models.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface UserData {\r\n\tuserName: string;\r\n\temail: string;\r\n\troles: string[];\r\n\tsocio: {\r\n\t\tid: string;\r\n\t\tnumeroSocio: number;\r\n\t\tnombre: string;\r\n\t\tapellido: string;\r\n\t\ttelefono: string;\r\n\t\temail: string;\r\n\t};\r\n}\r\n\r\n/// Login.\r\nexport interface LoginRequest {\r\n\temail: string;\r\n\tpassword: string;\r\n}\r\n\r\nexport interface AuthResponse {\r\n\ttoken: string;\r\n\trefreshToken: string;\r\n\tuserName: string;\r\n\troles: string[];\r\n\tsocio: {\r\n\t\tid: string;\r\n\t\tnumeroSocio: number;\r\n\t\tnombre: string;\r\n\t\tapellido: string;\r\n\t\ttelefono: string;\r\n\t\temail: string;\r\n\t};\r\n}\r\n\r\n/// Register.\r\nexport interface RegisterRequest {\r\n\tnombre: string;\r\n\tapellido: string;\r\n\ttelefono: string;\r\n\tusername: string;\r\n\temail: string;\r\n\tpassword: string;\r\n}\r\n\r\nexport interface OperationResult {\r\n\tsuccess: boolean;\r\n\tmessage: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "apellido",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "nombre",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "telefono",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "username",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 42
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "UserData",
            "id": "interface-UserData-fbb1b33d3e693b62eb9ac85a18cb81df5ef5c1d12b467db2d1a5e77d18617aecb2553ebee6c5779de18e16cb2f236738daba43967f2fabe5e7af334c8aabc449",
            "file": "src/app/auth/models.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface UserData {\r\n\tuserName: string;\r\n\temail: string;\r\n\troles: string[];\r\n\tsocio: {\r\n\t\tid: string;\r\n\t\tnumeroSocio: number;\r\n\t\tnombre: string;\r\n\t\tapellido: string;\r\n\t\ttelefono: string;\r\n\t\temail: string;\r\n\t};\r\n}\r\n\r\n/// Login.\r\nexport interface LoginRequest {\r\n\temail: string;\r\n\tpassword: string;\r\n}\r\n\r\nexport interface AuthResponse {\r\n\ttoken: string;\r\n\trefreshToken: string;\r\n\tuserName: string;\r\n\troles: string[];\r\n\tsocio: {\r\n\t\tid: string;\r\n\t\tnumeroSocio: number;\r\n\t\tnombre: string;\r\n\t\tapellido: string;\r\n\t\ttelefono: string;\r\n\t\temail: string;\r\n\t};\r\n}\r\n\r\n/// Register.\r\nexport interface RegisterRequest {\r\n\tnombre: string;\r\n\tapellido: string;\r\n\ttelefono: string;\r\n\tusername: string;\r\n\temail: string;\r\n\tpassword: string;\r\n}\r\n\r\nexport interface OperationResult {\r\n\tsuccess: boolean;\r\n\tmessage: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "roles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "socio",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "userName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "AppEffects",
            "id": "injectable-AppEffects-fd838f0ca6f16bb76d0a1da256e8bad2ec69931528c9d6f8fe779cc25726b365a67460e411d9104fbd207ba13953f247011e514eb2b74cfe84f690231a322c8e",
            "file": "src/app/state/app.effects.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\r\nimport { appInit, appInitSuccess, appInitFailure } from \"./app.actions\";\r\nimport { catchError, map, of, switchMap, take } from \"rxjs\";\r\nimport { AuthService } from \"../auth/auth.service\";\r\n\r\n@Injectable()\r\nexport class AppEffects {\r\n\tconstructor(private actions$: Actions, private authService: AuthService) {}\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "AuthEffects",
            "id": "injectable-AuthEffects-7b3c944f060b1b943f3f7d239cb4721e5b76ed6a3d462e3f3cf3d14bfe6d66b8da3597128d38dac3dda804e3e877e7af54577958820de01bbd2db6378fce08ef",
            "file": "src/app/auth/state/auth.effects.ts",
            "properties": [
                {
                    "name": "login$",
                    "defaultValue": "createEffect(() =>\r\n\t\tthis.actions$.pipe(\r\n\t\t\tofType(LoginActions.request),\r\n\t\t\tswitchMap(({ email, password }) =>\r\n\t\t\t\tthis.authService.login({ email, password }).pipe(\r\n\t\t\t\t\tmap((response) => {\r\n\t\t\t\t\t\treturn LoginActions.success({\r\n\t\t\t\t\t\t\ttoken: response.token,\r\n\t\t\t\t\t\t\trefreshToken: response.refreshToken,\r\n\t\t\t\t\t\t\tuserData: {\r\n\t\t\t\t\t\t\t\tuserName: response.userName,\r\n\t\t\t\t\t\t\t\temail: response.socio.email,\r\n\t\t\t\t\t\t\t\troles: response.roles,\r\n\t\t\t\t\t\t\t\tsocio: { ...response.socio },\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tcatchError((error) => of(LoginActions.failure({ error })))\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t)\r\n\t)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "loginSuccess$",
                    "defaultValue": "createEffect(\r\n\t\t() =>\r\n\t\t\tthis.actions$.pipe(\r\n\t\t\t\tofType(LoginActions.success),\r\n\t\t\t\ttap(() => {\r\n\t\t\t\t\tthis.navigationService.navigate(\"/\");\r\n\t\t\t\t})\r\n\t\t\t),\r\n\t\t{ dispatch: false }\r\n\t)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\r\nimport { AuthService } from \"../auth.service\";\r\nimport { LoginActions } from \"./auth.actions\";\r\nimport { catchError, map, of, switchMap, tap } from \"rxjs\";\r\nimport { NavigationService } from \"../../navigation.service\";\r\n\r\n@Injectable()\r\nexport class AuthEffects {\r\n\tpublic login$ = createEffect(() =>\r\n\t\tthis.actions$.pipe(\r\n\t\t\tofType(LoginActions.request),\r\n\t\t\tswitchMap(({ email, password }) =>\r\n\t\t\t\tthis.authService.login({ email, password }).pipe(\r\n\t\t\t\t\tmap((response) => {\r\n\t\t\t\t\t\treturn LoginActions.success({\r\n\t\t\t\t\t\t\ttoken: response.token,\r\n\t\t\t\t\t\t\trefreshToken: response.refreshToken,\r\n\t\t\t\t\t\t\tuserData: {\r\n\t\t\t\t\t\t\t\tuserName: response.userName,\r\n\t\t\t\t\t\t\t\temail: response.socio.email,\r\n\t\t\t\t\t\t\t\troles: response.roles,\r\n\t\t\t\t\t\t\t\tsocio: { ...response.socio },\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tcatchError((error) => of(LoginActions.failure({ error })))\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t)\r\n\t);\r\n\r\n\tpublic loginSuccess$ = createEffect(\r\n\t\t() =>\r\n\t\t\tthis.actions$.pipe(\r\n\t\t\t\tofType(LoginActions.success),\r\n\t\t\t\ttap(() => {\r\n\t\t\t\t\tthis.navigationService.navigate(\"/\");\r\n\t\t\t\t})\r\n\t\t\t),\r\n\t\t{ dispatch: false }\r\n\t);\r\n\r\n\tconstructor(\r\n\t\tprivate actions$: Actions,\r\n\t\tprivate authService: AuthService,\r\n\t\tprivate navigationService: NavigationService\r\n\t) {}\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "navigationService",
                        "type": "NavigationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 42,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "navigationService",
                        "type": "NavigationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "AuthService",
            "id": "injectable-AuthService-b531b8d6f50f583b958ceb6d7cab2e9e8577153577502a450a29dc595d846febed3dc8a2e1ee3c27991cd25e077c447fdd8032f813263dbd70e8e7dce70c7233",
            "file": "src/app/auth/auth.service.ts",
            "properties": [
                {
                    "name": "isUserLoggedIn$",
                    "defaultValue": "this.store.select(selectUserLoggedIn)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "refreshToken$",
                    "defaultValue": "this.store.select(selectRefreshToken)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "sociosUrl",
                    "defaultValue": "\"https://localhost:7259/api/socios\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "token$",
                    "defaultValue": "this.store.select(selectAuthToken)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "userData$",
                    "defaultValue": "this.store.select(selectUserData)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methods": [
                {
                    "name": "clearSession",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "dispatch",
                    "args": [
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getToken",
                    "args": [],
                    "optional": false,
                    "returnType": "string | null",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "loadUserFromToken",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<UserData | null>",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ]
                },
                {
                    "name": "login",
                    "args": [
                        {
                            "name": "data",
                            "type": "LoginRequest",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<AuthResponse>",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "LoginRequest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "register",
                    "args": [
                        {
                            "name": "data",
                            "type": "RegisterRequest",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<OperationResult>",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "RegisterRequest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "saveTokens",
                    "args": [
                        {
                            "name": "res",
                            "type": "AuthResponse",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "res",
                            "type": "AuthResponse",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { firstValueFrom, Observable, tap } from \"rxjs\";\r\nimport {\r\n\tAuthResponse,\r\n\tLoginRequest,\r\n\tOperationResult,\r\n\tRegisterRequest,\r\n\tUserData,\r\n} from \"./models\";\r\nimport { Action, Store } from \"@ngrx/store\";\r\nimport {\r\n\tselectAuthToken,\r\n\tselectRefreshToken,\r\n\tselectUserData,\r\n\tselectUserLoggedIn,\r\n} from \"./state/auth.selectors\";\r\nimport { clearAuth, setAuthTokens, setUserData } from \"./state/auth.actions\";\r\nimport {\r\n\tloadUserFromToken,\r\n\tloadUserFromTokenFailure,\r\n} from \"./state/auth.actions\";\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class AuthService {\r\n\tprivate readonly sociosUrl = \"https://localhost:7259/api/socios\";\r\n\r\n\tpublic isUserLoggedIn$ = this.store.select(selectUserLoggedIn);\r\n\tpublic userData$ = this.store.select(selectUserData);\r\n\tpublic token$ = this.store.select(selectAuthToken);\r\n\tpublic refreshToken$ = this.store.select(selectRefreshToken);\r\n\r\n\tconstructor(private http: HttpClient, private store: Store) {}\r\n\r\n\tlogin(data: LoginRequest): Observable<AuthResponse> {\r\n\t\treturn this.http\r\n\t\t\t.post<AuthResponse>(`${this.sociosUrl}/iniciar-sesion`, data)\r\n\t\t\t.pipe(tap((res) => this.saveTokens(res)));\r\n\t}\r\n\r\n\tregister(data: RegisterRequest): Observable<OperationResult> {\r\n\t\treturn this.http.post<OperationResult>(`${this.sociosUrl}`, data);\r\n\t}\r\n\r\n\tprivate saveTokens(res: AuthResponse) {\r\n\t\tthis.dispatch(\r\n\t\t\tsetAuthTokens({\r\n\t\t\t\ttoken: res.token,\r\n\t\t\t\trefreshToken: res.refreshToken,\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tlocalStorage.setItem(\"token\", res.token);\r\n\t\tlocalStorage.setItem(\"refreshToken\", res.refreshToken);\r\n\t}\r\n\r\n\tclearSession() {\r\n\t\tthis.dispatch(clearAuth());\r\n\t\tlocalStorage.removeItem(\"token\");\r\n\t\tlocalStorage.removeItem(\"refreshToken\");\r\n\t}\r\n\r\n\tasync loadUserFromToken(): Promise<UserData | null> {\r\n\t\tconst token = localStorage.getItem(\"token\");\r\n\t\tconst refreshToken = localStorage.getItem(\"refreshToken\");\r\n\t\tif (!token || !refreshToken) {\r\n\t\t\tthis.store.dispatch(loadUserFromTokenFailure());\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tthis.dispatch(setAuthTokens({ token, refreshToken }));\r\n\r\n\t\ttry {\r\n\t\t\tconst userData = await firstValueFrom(\r\n\t\t\t\tthis.http.get<UserData>(`${this.sociosUrl}/me`)\r\n\t\t\t);\r\n\r\n\t\t\tif (userData) {\r\n\t\t\t\tthis.dispatch(setUserData({ userData }));\r\n\t\t\t\treturn userData;\r\n\t\t\t} else {\r\n\t\t\t\tthis.clearSession();\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tthis.clearSession();\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\tgetToken(): string | null {\r\n\t\treturn localStorage.getItem(\"token\");\r\n\t}\r\n\r\n\tpublic dispatch(action: Action) {\r\n\t\tthis.store.dispatch(action);\r\n\t}\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 31,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "CanchasEffects",
            "id": "injectable-CanchasEffects-c0b36a59dd785f0696609dac18240686913093d023b72e1229496429d2f1fdf27c75c670c49ae8648c38ead8ce43543f9f30070aab630acaedf96d234aa1d5bb",
            "file": "src/app/modulos/canchas/state/canchas.effects.ts",
            "properties": [
                {
                    "name": "crearCancha$",
                    "defaultValue": "createEffect(() =>\r\n\t\tthis.actions$.pipe(\r\n\t\t\tofType(crearCancha),\r\n\t\t\tswitchMap(({ tipoSuelo }) =>\r\n\t\t\t\tthis.canchasService.createCancha({ tipoSuelo }).pipe(\r\n\t\t\t\t\tswitchMap(() => this.canchasService.getCanchas({ pageNumber: 1, pageSize: 10 }) as any),\r\n\t\t\t\t\tmap((response: any) =>\r\n\t\t\t\t\t\tcanchasLoaded({\r\n\t\t\t\t\t\t\tcanchas: response.items.map((item: any) => ({\r\n\t\t\t\t\t\t\t\tid: item.id,\r\n\t\t\t\t\t\t\t\ttipoSuelo: TipoSuelo[item.tipoSuelo],\r\n\t\t\t\t\t\t\t})),\r\n\t\t\t\t\t\t\ttotalCount: response.totalCount,\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t),\r\n\t\t{ dispatch: true }\r\n\t)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 62,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "init$",
                    "defaultValue": "createEffect(() =>\r\n\t\tthis.actions$.pipe(\r\n\t\t\tofType(initCanchas),\r\n\t\t\tswitchMap(() => {\r\n\t\t\t\tconst request: ObtenerCanchasRequest = {\r\n\t\t\t\t\tpageNumber: 1,\r\n\t\t\t\t\tpageSize: 10,\r\n\t\t\t\t};\r\n\r\n\t\t\t\treturn this.canchasService.getCanchas(request);\r\n\t\t\t}),\r\n\t\t\tmap((response) =>\r\n\t\t\t\tcanchasLoaded({\r\n\t\t\t\t\tcanchas: response.items.map((item) => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tid: item.id,\r\n\t\t\t\t\t\t\ttipoSuelo: TipoSuelo[item.tipoSuelo],\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}),\r\n\t\t\t\t\ttotalCount: response.totalCount,\r\n\t\t\t\t})\r\n\t\t\t)\r\n\t\t)\r\n\t)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "pageChanged$",
                    "defaultValue": "createEffect(() =>\r\n\t\tthis.actions$.pipe(\r\n\t\t\tofType(listActions.pageChanged),\r\n\t\t\t// Solo reaccionar si es la lista de canchas\r\n\t\t\tfilter((action) => action.listId === \"canchas-list\"),\r\n\t\t\tswitchMap(({ pageIndex, pageSize }) => {\r\n\t\t\t\tconst request: ObtenerCanchasRequest = {\r\n\t\t\t\t\tpageNumber: pageIndex + 1,\r\n\t\t\t\t\tpageSize,\r\n\t\t\t\t};\r\n\t\t\t\treturn this.canchasService.getCanchas(request).pipe(\r\n\t\t\t\t\tmap((response) =>\r\n\t\t\t\t\t\tcanchasLoaded({\r\n\t\t\t\t\t\t\tcanchas: response.items.map((item) => ({\r\n\t\t\t\t\t\t\t\tid: item.id,\r\n\t\t\t\t\t\t\t\ttipoSuelo: TipoSuelo[item.tipoSuelo],\r\n\t\t\t\t\t\t\t})),\r\n\t\t\t\t\t\t\ttotalCount: response.totalCount,\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t})\r\n\t\t)\r\n\t)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\r\nimport { CanchasService } from \"../canchas.service\";\r\nimport { canchasLoaded, initCanchas, crearCancha } from \"./canchas.actions\";\r\nimport { map, switchMap, filter, tap } from \"rxjs\";\r\nimport { ObtenerCanchasRequest } from \"../models/ObtenerCanchasRequest\";\r\nimport { TipoSuelo } from \"../models/models\";\r\nimport { listActions } from \"../../../components/list/state/list.actions\";\r\n\r\n@Injectable()\r\nexport class CanchasEffects {\r\n\tpublic init$ = createEffect(() =>\r\n\t\tthis.actions$.pipe(\r\n\t\t\tofType(initCanchas),\r\n\t\t\tswitchMap(() => {\r\n\t\t\t\tconst request: ObtenerCanchasRequest = {\r\n\t\t\t\t\tpageNumber: 1,\r\n\t\t\t\t\tpageSize: 10,\r\n\t\t\t\t};\r\n\r\n\t\t\t\treturn this.canchasService.getCanchas(request);\r\n\t\t\t}),\r\n\t\t\tmap((response) =>\r\n\t\t\t\tcanchasLoaded({\r\n\t\t\t\t\tcanchas: response.items.map((item) => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tid: item.id,\r\n\t\t\t\t\t\t\ttipoSuelo: TipoSuelo[item.tipoSuelo],\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}),\r\n\t\t\t\t\ttotalCount: response.totalCount,\r\n\t\t\t\t})\r\n\t\t\t)\r\n\t\t)\r\n\t);\r\n\r\n\tpublic pageChanged$ = createEffect(() =>\r\n\t\tthis.actions$.pipe(\r\n\t\t\tofType(listActions.pageChanged),\r\n\t\t\t// Solo reaccionar si es la lista de canchas\r\n\t\t\tfilter((action) => action.listId === \"canchas-list\"),\r\n\t\t\tswitchMap(({ pageIndex, pageSize }) => {\r\n\t\t\t\tconst request: ObtenerCanchasRequest = {\r\n\t\t\t\t\tpageNumber: pageIndex + 1,\r\n\t\t\t\t\tpageSize,\r\n\t\t\t\t};\r\n\t\t\t\treturn this.canchasService.getCanchas(request).pipe(\r\n\t\t\t\t\tmap((response) =>\r\n\t\t\t\t\t\tcanchasLoaded({\r\n\t\t\t\t\t\t\tcanchas: response.items.map((item) => ({\r\n\t\t\t\t\t\t\t\tid: item.id,\r\n\t\t\t\t\t\t\t\ttipoSuelo: TipoSuelo[item.tipoSuelo],\r\n\t\t\t\t\t\t\t})),\r\n\t\t\t\t\t\t\ttotalCount: response.totalCount,\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t})\r\n\t\t)\r\n\t);\r\n\r\n\tpublic crearCancha$ = createEffect(() =>\r\n\t\tthis.actions$.pipe(\r\n\t\t\tofType(crearCancha),\r\n\t\t\tswitchMap(({ tipoSuelo }) =>\r\n\t\t\t\tthis.canchasService.createCancha({ tipoSuelo }).pipe(\r\n\t\t\t\t\tswitchMap(() => this.canchasService.getCanchas({ pageNumber: 1, pageSize: 10 }) as any),\r\n\t\t\t\t\tmap((response: any) =>\r\n\t\t\t\t\t\tcanchasLoaded({\r\n\t\t\t\t\t\t\tcanchas: response.items.map((item: any) => ({\r\n\t\t\t\t\t\t\t\tid: item.id,\r\n\t\t\t\t\t\t\t\ttipoSuelo: TipoSuelo[item.tipoSuelo],\r\n\t\t\t\t\t\t\t})),\r\n\t\t\t\t\t\t\ttotalCount: response.totalCount,\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t),\r\n\t\t{ dispatch: true }\r\n\t);\r\n\r\n\tconstructor(\r\n\t\tprivate readonly actions$: Actions,\r\n\t\tprivate readonly canchasService: CanchasService\r\n\t) {}\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "canchasService",
                        "type": "CanchasService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 81,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "canchasService",
                        "type": "CanchasService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "CanchasService",
            "id": "injectable-CanchasService-c79c5201425df6046b85018559c4b9c279a751db24ef4aca0c04917aaf455104ec63d673bfce491a131bea0ed087665210dc72e4f09b7f662dde1827963e66cd",
            "file": "src/app/modulos/canchas/canchas.service.ts",
            "properties": [
                {
                    "name": "canchas$",
                    "defaultValue": "this.store.select(selectCanchas)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "canchasUrl",
                    "defaultValue": "\"https://localhost:7259/api/canchas\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "totalCount$",
                    "defaultValue": "this.store.select(selectTotalCount)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "totalPages$",
                    "defaultValue": "this.store.select(selectTotalPages)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methods": [
                {
                    "name": "createCancha",
                    "args": [
                        {
                            "name": "request",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "request",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "dispatch",
                    "args": [
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getCanchas",
                    "args": [
                        {
                            "name": "request",
                            "type": "ObtenerCanchasRequest",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "request",
                            "type": "ObtenerCanchasRequest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Action, Store } from \"@ngrx/store\";\r\nimport {\r\n\tCanchasPagedResult,\r\n\tObtenerCanchasRequest,\r\n} from \"./models/ObtenerCanchasRequest\";\r\nimport {\r\n\tselectCanchas,\r\n\tselectTotalCount,\r\n\tselectTotalPages,\r\n} from \"./state/canchas.selectors\";\r\n\r\n@Injectable({\r\n\tprovidedIn: \"root\",\r\n})\r\nexport class CanchasService {\r\n\tprivate readonly canchasUrl = \"https://localhost:7259/api/canchas\";\r\n\r\n\tpublic canchas$ = this.store.select(selectCanchas);\r\n\tpublic totalCount$ = this.store.select(selectTotalCount);\r\n\tpublic totalPages$ = this.store.select(selectTotalPages);\r\n\r\n\tconstructor(private http: HttpClient, private store: Store) {}\r\n\r\n\tpublic getCanchas(request: ObtenerCanchasRequest) {\r\n\t\tlet params = new HttpParams();\r\n\t\tparams = params.set(\"pageNumber\", request.pageNumber);\r\n\t\tparams = params.set(\"pageSize\", request.pageSize);\r\n\r\n\t\treturn this.http.get<CanchasPagedResult>(`${this.canchasUrl}`, { params });\r\n\t}\r\n\r\n\tpublic createCancha(request: { tipoSuelo: number }) {\r\n\t\treturn this.http.post<any>(`${this.canchasUrl}`, request);\r\n\t}\r\n\r\n\tpublic dispatch(action: Action) {\r\n\t\tthis.store.dispatch(action);\r\n\t}\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "NavigationService",
            "id": "injectable-NavigationService-bba4f6536152ccaa18b975fa9ce446a270f9ce9ad8aef26135ddc4971d5facca5f484f16ff8fa0b3379d184395c027946dab60199af4cb297cfb7845e2e0b839",
            "file": "src/app/navigation.service.ts",
            "properties": [
                {
                    "name": "currentUrl",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "navigationState$",
                    "defaultValue": "new BehaviorSubject<NavigationState>({\r\n\t\tpreviousUrl: null,\r\n\t\tcurrentUrl: \"\",\r\n\t\tnextUrl: null,\r\n\t\tisSubroute: false,\r\n\t\tisFullRouteChange: false,\r\n\t})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "nextUrl",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "previousUrl",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getCurrentUrl",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "getNavigationState",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "getPreviousUrl",
                    "args": [],
                    "optional": false,
                    "returnType": "string | null",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "isSubroute",
                    "args": [
                        {
                            "name": "from",
                            "type": "string | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "to",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "from",
                            "type": "string | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "to",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "navigate",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\nimport {\r\n\tRouter,\r\n\tNavigationEnd,\r\n\tEvent as NavigationEvent,\r\n} from \"@angular/router\";\r\nimport { filter, pairwise, startWith, map } from \"rxjs/operators\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\n\r\nexport interface NavigationState {\r\n\tpreviousUrl: string | null;\r\n\tcurrentUrl: string;\r\n\tnextUrl: string | null;\r\n\tisSubroute: boolean;\r\n\tisFullRouteChange: boolean;\r\n}\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class NavigationService {\r\n\tprivate previousUrl: string | null = null;\r\n\tprivate currentUrl: string = \"\";\r\n\tprivate nextUrl: string | null = null;\r\n\tprivate navigationState$ = new BehaviorSubject<NavigationState>({\r\n\t\tpreviousUrl: null,\r\n\t\tcurrentUrl: \"\",\r\n\t\tnextUrl: null,\r\n\t\tisSubroute: false,\r\n\t\tisFullRouteChange: false,\r\n\t});\r\n\r\n\tconstructor(private router: Router) {\r\n\t\tthis.router.events\r\n\t\t\t.pipe(\r\n\t\t\t\tfilter(\r\n\t\t\t\t\t(event: NavigationEvent): event is NavigationEnd =>\r\n\t\t\t\t\t\tevent instanceof NavigationEnd\r\n\t\t\t\t),\r\n\t\t\t\tstartWith({ urlAfterRedirects: this.router.url } as NavigationEnd),\r\n\t\t\t\tpairwise()\r\n\t\t\t)\r\n\t\t\t.subscribe(([prev, curr]: [NavigationEnd, NavigationEnd]) => {\r\n\t\t\t\tthis.previousUrl = prev.urlAfterRedirects;\r\n\t\t\t\tthis.currentUrl = curr.urlAfterRedirects;\r\n\t\t\t\tthis.nextUrl = null;\r\n\t\t\t\tconst isSubroute = this.isSubroute(this.previousUrl, this.currentUrl);\r\n\t\t\t\tconst isFullRouteChange = !isSubroute;\r\n\t\t\t\tthis.navigationState$.next({\r\n\t\t\t\t\tpreviousUrl: this.previousUrl,\r\n\t\t\t\t\tcurrentUrl: this.currentUrl,\r\n\t\t\t\t\tnextUrl: null,\r\n\t\t\t\t\tisSubroute,\r\n\t\t\t\t\tisFullRouteChange,\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t}\r\n\r\n\tpublic getNavigationState() {\r\n\t\treturn this.navigationState$.asObservable();\r\n\t}\r\n\r\n\tpublic getCurrentUrl(): string {\r\n\t\treturn this.currentUrl;\r\n\t}\r\n\r\n\tpublic getPreviousUrl(): string | null {\r\n\t\treturn this.previousUrl;\r\n\t}\r\n\r\n\tpublic navigate(url: string): void {\r\n\t\tthis.nextUrl = url;\r\n\t\tconst isSubroute = this.isSubroute(this.currentUrl, url);\r\n\t\tconst isFullRouteChange = !isSubroute;\r\n\t\tthis.navigationState$.next({\r\n\t\t\tpreviousUrl: this.currentUrl,\r\n\t\t\tcurrentUrl: url,\r\n\t\t\tnextUrl: url,\r\n\t\t\tisSubroute,\r\n\t\t\tisFullRouteChange,\r\n\t\t});\r\n\t\tthis.router.navigateByUrl(url);\r\n\t}\r\n\r\n\tprivate isSubroute(from: string | null, to: string): boolean {\r\n\t\tif (!from) return false;\r\n\t\t// Considera subruta si el inicio de la ruta es igual y solo cambia el segmento final\r\n\t\tconst fromSegments = from.split(\"/\").filter(Boolean);\r\n\t\tconst toSegments = to.split(\"/\").filter(Boolean);\r\n\t\tif (fromSegments.length === 0 || toSegments.length === 0) return false;\r\n\t\tif (fromSegments[0] !== toSegments[0]) return false;\r\n\t\t// Si solo cambia el último segmento o se agrega uno, es subruta\r\n\t\tif (\r\n\t\t\ttoSegments.length > fromSegments.length &&\r\n\t\t\ttoSegments.slice(0, fromSegments.length).join(\"/\") ===\r\n\t\t\t\tfromSegments.join(\"/\")\r\n\t\t) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (\r\n\t\t\tfromSegments.length > toSegments.length &&\r\n\t\t\tfromSegments.slice(0, toSegments.length).join(\"/\") ===\r\n\t\t\t\ttoSegments.join(\"/\")\r\n\t\t) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 29,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "SpinnerService",
            "id": "injectable-SpinnerService-278f80e51ec158195b8315e7ea6bc4d7a1c3ec95fa530620d97ac09432d439d69435a2dcec7206fe99efd5826d66c89dbd702ae3aa0d01639a36ee4681646a9e",
            "file": "src/app/spinner.service.ts",
            "properties": [
                {
                    "name": "_loading",
                    "defaultValue": "new BehaviorSubject<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_pendingRequests",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loading$",
                    "defaultValue": "this._loading.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        125,
                        148
                    ]
                }
            ],
            "methods": [
                {
                    "name": "hide",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "reset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "show",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\nimport {\r\n\tNavigationCancel,\r\n\tNavigationEnd,\r\n\tNavigationError,\r\n\tNavigationStart,\r\n\tRouter,\r\n} from \"@angular/router\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class SpinnerService {\r\n\tprivate _loading = new BehaviorSubject<boolean>(false);\r\n\tpublic readonly loading$ = this._loading.asObservable();\r\n\tprivate _pendingRequests = 0;\r\n\r\n\tconstructor(router: Router) {\r\n\t\trouter.events.subscribe((event) => {\r\n\t\t\tif (event instanceof NavigationStart) {\r\n\t\t\t\tthis.show();\r\n\t\t\t} else if (\r\n\t\t\t\tevent instanceof NavigationEnd ||\r\n\t\t\t\tevent instanceof NavigationCancel ||\r\n\t\t\t\tevent instanceof NavigationError\r\n\t\t\t) {\r\n\t\t\t\tthis.hide();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tshow(): void {\r\n\t\tthis._pendingRequests++;\r\n\t\tthis._loading.next(true);\r\n\t}\r\n\r\n\thide(): void {\r\n\t\tif (this._pendingRequests > 0) {\r\n\t\t\tthis._pendingRequests--;\r\n\t\t}\r\n\t\tif (this._pendingRequests === 0) {\r\n\t\t\tthis._loading.next(false);\r\n\t\t}\r\n\t}\r\n\r\n\treset(): void {\r\n\t\tthis._pendingRequests = 0;\r\n\t\tthis._loading.next(false);\r\n\t}\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AdminCanchasComponent",
            "id": "component-AdminCanchasComponent-2d46dc302c08f3bedeffcb42229bf8becc2b7945114843e44b8a392ff45ae21ce70b89e1d73d6bfa87420588a669081377c1a41d8e0fccbb8f97b8e6e9d82774",
            "file": "src/app/modulos/canchas/admin-canchas.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-admin-canchas",
            "styleUrls": [
                "./admin-canchas.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./admin-canchas.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "columns",
                    "defaultValue": "[\r\n\t\t{\r\n\t\t\tproperty: \"id\",\r\n\t\t\theader: \"Numero de Cancha\",\r\n\t\t\tclasses: [\"list-col-xs\", \"list-align-center\"],\r\n\t\t},\r\n\t\t{\r\n\t\t\tproperty: \"tipoSuelo\",\r\n\t\t\theader: \"Tipo de Suelo\",\r\n\t\t\tclasses: [],\r\n\t\t},\r\n\t]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ListColumn<Cancha>[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "createForm",
                    "defaultValue": "{ tipoSuelo: null as number | null }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 63
                },
                {
                    "name": "data$",
                    "defaultValue": "this.service.canchas$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 54,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "destroy$",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "listId",
                    "defaultValue": "\"canchas-list\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 53,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "newButton",
                    "defaultValue": "{\r\n\t\tid: \"new-cancha-button\",\r\n\t\tlabel: \"Nueva Cancha\",\r\n\t\ticon: \"fa fa-plus\",\r\n\t\tcolor: \"primary\",\r\n\t\tkind: \"main\",\r\n\t\tdisabled: false,\r\n\t}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ButtonWithId",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "pageIndex$",
                    "defaultValue": "this.store\r\n\t\t.select(selectPageNumber)\r\n\t\t.pipe(map((n) => n - 1))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "pageSize$",
                    "defaultValue": "this.store.select(selectPageSize)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 57,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "showCreateModal",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "tipoSuelos",
                    "defaultValue": "[\r\n\t\t{ value: 1, label: \"Polvo de Ladrillo\" },\r\n\t\t{ value: 2, label: \"Hormigón\" },\r\n\t\t{ value: 3, label: \"Césped\" },\r\n\t]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "totalCount$",
                    "defaultValue": "this.service.totalCount$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 55,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "totalPages$",
                    "defaultValue": "this.service.totalPages$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 56,
                    "modifierKind": [
                        124
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "closeCreateModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "onCancelCreateCancha",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmitCreateCancha",
                    "args": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "openCreateModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ListComponent",
                    "type": "component"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "CrearCanchaModalComponent",
                    "type": "component"
                },
                {
                    "name": "AppButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { ListComponent } from \"../../components/list/list.component\";\r\nimport { CanchasService } from \"./canchas.service\";\r\nimport { ListColumn } from \"../../components/list/models\";\r\nimport { Cancha } from \"./models/models\";\r\nimport { Subject } from \"rxjs\";\r\nimport { initCanchas } from \"./state/canchas.actions\";\r\nimport { selectPageSize, selectPageNumber } from \"./state/canchas.selectors\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { CrearCanchaModalComponent } from \"./crear-cancha-modal.component\";\r\nimport { ButtonWithId } from \"../../components/buttons/button.interfaces\";\r\nimport { AppButtonComponent } from \"../../components/buttons/button.component\";\r\n\r\n@Component({\r\n\tselector: \"app-admin-canchas\",\r\n\tstandalone: true,\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tListComponent,\r\n\t\tFormsModule,\r\n\t\tCrearCanchaModalComponent,\r\n\t\tAppButtonComponent,\r\n\t],\r\n\ttemplateUrl: \"./admin-canchas.component.html\",\r\n\tstyleUrls: [\"./admin-canchas.component.scss\"],\r\n})\r\nexport class AdminCanchasComponent implements OnInit, OnDestroy {\r\n\tprivate destroy$ = new Subject<void>();\r\n\tprotected columns: ListColumn<Cancha>[] = [\r\n\t\t{\r\n\t\t\tproperty: \"id\",\r\n\t\t\theader: \"Numero de Cancha\",\r\n\t\t\tclasses: [\"list-col-xs\", \"list-align-center\"],\r\n\t\t},\r\n\t\t{\r\n\t\t\tproperty: \"tipoSuelo\",\r\n\t\t\theader: \"Tipo de Suelo\",\r\n\t\t\tclasses: [],\r\n\t\t},\r\n\t];\r\n\tprotected newButton: ButtonWithId = {\r\n\t\tid: \"new-cancha-button\",\r\n\t\tlabel: \"Nueva Cancha\",\r\n\t\ticon: \"fa fa-plus\",\r\n\t\tcolor: \"primary\",\r\n\t\tkind: \"main\",\r\n\t\tdisabled: false,\r\n\t};\r\n\r\n\tprotected listId = \"canchas-list\";\r\n\tprotected data$ = this.service.canchas$;\r\n\tprotected totalCount$ = this.service.totalCount$;\r\n\tprotected totalPages$ = this.service.totalPages$;\r\n\tpublic pageSize$ = this.store.select(selectPageSize);\r\n\tpublic pageIndex$ = this.store\r\n\t\t.select(selectPageNumber)\r\n\t\t.pipe(map((n) => n - 1));\r\n\r\n\tshowCreateModal = false;\r\n\tcreateForm = { tipoSuelo: null as number | null };\r\n\ttipoSuelos = [\r\n\t\t{ value: 1, label: \"Polvo de Ladrillo\" },\r\n\t\t{ value: 2, label: \"Hormigón\" },\r\n\t\t{ value: 3, label: \"Césped\" },\r\n\t];\r\n\r\n\tconstructor(\r\n\t\tprivate readonly service: CanchasService,\r\n\t\tprivate readonly store: Store\r\n\t) {}\r\n\r\n\tpublic ngOnInit() {\r\n\t\tthis.service.dispatch(initCanchas());\r\n\t}\r\n\r\n\tpublic ngOnDestroy() {\r\n\t\tthis.destroy$.next();\r\n\t\tthis.destroy$.complete();\r\n\t}\r\n\r\n\topenCreateModal() {\r\n\t\tthis.showCreateModal = true;\r\n\t}\r\n\r\n\tcloseCreateModal() {\r\n\t\tthis.showCreateModal = false;\r\n\t}\r\n\r\n\tonCancelCreateCancha() {\r\n\t\tthis.createForm = { tipoSuelo: null };\r\n\t\tthis.closeCreateModal();\r\n\t}\r\n\r\n\tpublic onSubmitCreateCancha(event: { tipoSuelo: number }) {\r\n\t\tif (event && event.tipoSuelo) {\r\n\t\t\tthis.store.dispatch({\r\n\t\t\t\ttype: \"[Canchas] Crear Cancha\",\r\n\t\t\t\ttipoSuelo: event.tipoSuelo,\r\n\t\t\t});\r\n\t\t\tthis.createForm = { tipoSuelo: null };\r\n\t\t\tthis.closeCreateModal();\r\n\t\t}\r\n\t}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "h2 {\r\n\tmargin-top: 0;\r\n\tcolor: var(--color-primary, #8d5524);\r\n}\r\np {\r\n\tcolor: var(--color-text, #3e2723);\r\n}\r\n",
                    "styleUrl": "./admin-canchas.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "CanchasService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 68,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "CanchasService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<h2>Administración de Canchas</h2>\r\n<p>Aquí podrás crear, editar y eliminar canchas.</p>\r\n<app-button\r\n\t[button]=\"this.newButton\"\r\n\t(buttonClick)=\"openCreateModal()\"\r\n/>\r\n\r\n<app-crear-cancha-modal\r\n\t[show]=\"showCreateModal\"\r\n\t[tipoSuelos]=\"tipoSuelos\"\r\n\t[form]=\"createForm\"\r\n\t(close)=\"closeCreateModal()\"\r\n\t(cancel)=\"onCancelCreateCancha()\"\r\n\t(save)=\"onSubmitCreateCancha($event)\"\r\n></app-crear-cancha-modal>\r\n\r\n<app-list\r\n\t[listId]=\"this.listId\"\r\n\t[columns]=\"this.columns\"\r\n\t[data]=\"this.data$\"\r\n\t[totalItems]=\"this.totalCount$\"\r\n\t[totalPages]=\"this.totalPages$\"\r\n\t[pageSize]=\"(this.pageSize$ | async) ?? 10\"\r\n\t[pageIndex]=\"(this.pageIndex$ | async) ?? 0\"\r\n></app-list>\r\n"
        },
        {
            "name": "AppButtonComponent",
            "id": "component-AppButtonComponent-0d5c40da7581900a52cd00659fde57de7c251ab694f495e8f59bec99ca28be5b6e5370812c0178fbdea7c925334261ed5883b60d2e90a2f73f0a95b447098045",
            "file": "src/app/components/buttons/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "button",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "ButtonWithId",
                    "decorators": []
                },
                {
                    "name": "classes",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string[]",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "index",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "buttonClick",
                    "defaultValue": "new EventEmitter<TopbarButtonClickEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "colorTheme",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "hasIcon",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "hasLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "kind",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "onClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, OnInit } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport {\r\n\tButtonWithId,\r\n\tTopbarButton,\r\n\tTopbarButtonClickEvent,\r\n} from \"../buttons/button.interfaces\";\r\n\r\n@Component({\r\n\tselector: \"app-button\",\r\n\tstandalone: true,\r\n\timports: [CommonModule],\r\n\ttemplateUrl: \"./button.component.html\",\r\n\tstyleUrls: [\"./button.component.scss\"],\r\n})\r\nexport class AppButtonComponent implements OnInit {\r\n\t@Input() button!: ButtonWithId;\r\n\t@Input() index?: number;\r\n\t@Input() classes: string[] = [];\r\n\t@Input() disabled?: boolean;\r\n\t@Output() buttonClick = new EventEmitter<TopbarButtonClickEvent>();\r\n\r\n\thasIcon: boolean = false;\r\n\thasLoading: boolean = false;\r\n\tcolorTheme: string = \"\";\r\n\tkind: string = \"\";\r\n\r\n\tpublic ngOnInit(): void {\r\n\t\tthis.hasIcon = !!this.button.icon;\r\n\t\tthis.hasLoading = !!this.button.loading;\r\n\t\tthis.colorTheme = this.button.color ?? \"primary\";\r\n\t\tthis.kind = this.button.kind ? `btn-${this.button.kind}` : \"btn-main\";\r\n\t\tthis.disabled = this.disabled\r\n\t\t\t? this.disabled\r\n\t\t\t: this.button.disabled ?? false;\r\n\t}\r\n\r\n\tonClick() {\r\n\t\tif (!this.button.disabled && !this.button.loading) {\r\n\t\t\tthis.buttonClick.emit({ button: this.button, index: this.index });\r\n\t\t}\r\n\t}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".accent {\r\n\tbackground: var(--color-secondary, #ff4081);\r\n\tcolor: var(--color-bg-alt, #fff);\r\n\tborder: none;\r\n}\r\n.warn {\r\n\tbackground: var(--color-accent, #f44336);\r\n\tcolor: var(--color-bg, #fff);\r\n\tborder: none;\r\n}\r\nbutton {\r\n\tdisplay: inline-flex;\r\n\talign-items: center;\r\n\tgap: 0.5em;\r\n\tpadding: 0.5em 1.2em;\r\n\tborder-radius: 8px;\r\n\tfont-size: clamp(0.9rem, 2vw, 1.1rem);\r\n\tcursor: pointer;\r\n\ttransition: background 0.2s, color 0.2s, border 0.2s;\r\n\tbackground: var(--color-bg, #f5f5f5);\r\n\tcolor: var(--color-text, #222);\r\n\tborder: 1px solid var(--color-border, #ccc);\r\n\tfont-family: inherit;\r\n\tfont-weight: 500;\r\n\tbox-shadow: 0 1px 2px rgba(0, 0, 0, 0.03);\r\n}\r\nbutton:disabled {\r\n\topacity: 0.6;\r\n\tcursor: not-allowed;\r\n}\r\nbutton:hover:not(:disabled) {\r\n\tbackground: var(--color-secondary, #ff4081);\r\n\tcolor: var(--color-bg-alt, #fff);\r\n\tbox-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.btn-main {\r\n\tfont-size: clamp(0.9rem, 2vw, 1.1rem);\r\n\tfont-weight: 700;\r\n\tbackground: var(--color-primary);\r\n\tcolor: var(--color-bg);\r\n\tborder: none;\r\n\tborder-radius: 0.7rem;\r\n\tpadding: clamp(0.5rem, 1.5vw, 0.7rem) clamp(0.7rem, 3vw, 1.6rem);\r\n\tcursor: pointer;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tgap: 0.7rem;\r\n\tbox-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.08);\r\n\ttransition: background 0.2s, box-shadow 0.2s, color 0.2s;\r\n\tfont-family: inherit;\r\n\tletter-spacing: 0.02em;\r\n\twhite-space: nowrap;\r\n\toverflow: hidden;\r\n\ttext-overflow: ellipsis;\r\n}\r\n\r\n.btn-secondary {\r\n\tfont-size: clamp(0.9rem, 2vw, 1.1rem);\r\n\tbackground: var(--color-accent);\r\n\tcolor: var(--color-text);\r\n\tborder: none;\r\n\tborder-radius: 0.7rem;\r\n\tpadding: 0.5rem 1.2rem;\r\n\tcursor: pointer;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tgap: 0.5rem;\r\n\tbox-shadow: 0 1px 4px 0 rgba(0, 0, 0, 0.06);\r\n\ttransition: background 0.2s, color 0.2s, box-shadow 0.2s;\r\n\tfont-family: inherit;\r\n}\r\n\r\n.btn-main:disabled,\r\n.btn-secondary:disabled {\r\n\topacity: 0.6;\r\n\tcursor: not-allowed;\r\n}\r\n\r\n.icon {\r\n\tfont-size: 1.2em;\r\n\tdisplay: inline-block;\r\n\tvertical-align: middle;\r\n}\r\n.has-icon .btn-label {\r\n\tmargin-left: 0.3em;\r\n}\r\n.loading .btn-label {\r\n\topacity: 0.5;\r\n}\r\n.spinner {\r\n\twidth: 1em;\r\n\theight: 1em;\r\n\tborder: 2px solid var(--color-bg, #fff);\r\n\tborder-top: 2px solid var(--color-primary, #1976d2);\r\n\tborder-radius: 50%;\r\n\tdisplay: inline-block;\r\n\tanimation: spin 0.8s linear infinite;\r\n\tmargin-left: 0.5em;\r\n}\r\n@keyframes spin {\r\n\t0% {\r\n\t\ttransform: rotate(0deg);\r\n\t}\r\n\t100% {\r\n\t\ttransform: rotate(360deg);\r\n\t}\r\n}\r\n\r\n.btn-width-100 {\r\n\twidth: 100%;\r\n\tmin-width: 0;\r\n}\r\n",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<button\r\n\t[type]=\"button.type || 'button'\"\r\n\t[disabled]=\"this.disabled\"\r\n\t[ngClass]=\"[\r\n\t\tthis.hasIcon ? 'has-icon' : '',\r\n\t\tthis.hasLoading ? 'loading' : '',\r\n\t\tthis.kind,\r\n\t\tthis.classes.join(' ')\r\n\t]\"\r\n\t(click)=\"onClick()\"\r\n>\r\n\t@if (this.hasIcon) {\r\n\t<span\r\n\t\tclass=\"icon\"\r\n\t\t[class]=\"button.icon\"\r\n\t></span>\r\n\t}\r\n\t<span class=\"btn-label\">{{ button.label }}</span>\r\n\t<span\r\n\t\t*ngIf=\"hasLoading\"\r\n\t\tclass=\"spinner\"\r\n\t></span>\r\n</button>\r\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-fef5d5b74cd5fdf6e0c5e140473e99228fe51b8989d46178e084f59d4515a4de8d15dd73239e4c69374b1e40a2d64f60b0fd42b34a55292697b4d8cadee2dbb5",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "destroy$",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isUserLoggedIn",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "mainButton",
                    "defaultValue": "{\r\n\t\tid: TOPBAR_BUTTONS_IDS.homeButton,\r\n\t\tlabel: \"Inicio\",\r\n\t\ticon: \"fa fa-home\",\r\n\t\tcolor: \"primary\",\r\n\t\tkind: \"main\",\r\n\t\tdisabled: false,\r\n\t}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TopbarButton",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "secondaryButtons",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TopbarButton[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "title",
                    "defaultValue": "\"My Awesome Project\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "onTopbarButton",
                    "args": [
                        {
                            "name": "event",
                            "type": "TopbarButtonClickEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "TopbarButtonClickEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateSecondaryButtons",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "ShellComponent",
                    "type": "component"
                },
                {
                    "name": "SpinnerComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { ShellComponent } from \"./shell/shell.component\";\r\nimport type { TopbarButtonClickEvent } from \"./shell/shell.component\";\r\nimport { AuthService } from \"./auth/auth.service\";\r\nimport { TOPBAR_BUTTONS_IDS } from \"./topbar/topbar-buttons-ids\";\r\nimport { NavigationService } from \"./navigation.service\";\r\nimport { SpinnerComponent } from \"./spinner/spinner.component\";\r\nimport { TopbarButton } from \"./components/buttons/button.interfaces\";\r\nimport { Subject, takeUntil } from \"rxjs\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { appInit } from \"./state/app.actions\";\r\n\r\n@Component({\r\n\tselector: \"app-root\",\r\n\tstandalone: true,\r\n\timports: [ShellComponent, SpinnerComponent],\r\n\ttemplateUrl: \"./app.component.html\",\r\n\tstyleUrl: \"./app.component.scss\",\r\n})\r\nexport class AppComponent implements OnInit, OnDestroy {\r\n\ttitle = \"My Awesome Project\";\r\n\tmainButton: TopbarButton = {\r\n\t\tid: TOPBAR_BUTTONS_IDS.homeButton,\r\n\t\tlabel: \"Inicio\",\r\n\t\ticon: \"fa fa-home\",\r\n\t\tcolor: \"primary\",\r\n\t\tkind: \"main\",\r\n\t\tdisabled: false,\r\n\t};\r\n\tsecondaryButtons: TopbarButton[] = [];\r\n\tprivate destroy$ = new Subject<void>();\r\n\tprivate isUserLoggedIn = false;\r\n\r\n\tconstructor(\r\n\t\tprivate readonly authService: AuthService,\r\n\t\tprivate readonly navigationService: NavigationService,\r\n\t\tprivate readonly store: Store\r\n\t) {}\r\n\r\n\tpublic ngOnInit(): void {\r\n\t\tthis.store.dispatch(appInit());\r\n\t\tthis.authService.isUserLoggedIn$\r\n\t\t\t.pipe(takeUntil(this.destroy$))\r\n\t\t\t.subscribe((isLoggedIn) => {\r\n\t\t\t\tthis.isUserLoggedIn = isLoggedIn;\r\n\t\t\t\tthis.updateSecondaryButtons();\r\n\t\t\t});\r\n\t}\r\n\r\n\tpublic ngOnDestroy(): void {\r\n\t\tthis.destroy$.next();\r\n\t\tthis.destroy$.complete();\r\n\t}\r\n\r\n\tonTopbarButton(event: TopbarButtonClickEvent): void {\r\n\t\tswitch (event.button.id) {\r\n\t\t\tcase TOPBAR_BUTTONS_IDS.loginButton:\r\n\t\t\t\tthis.navigationService.navigate(\"/login\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase TOPBAR_BUTTONS_IDS.registerButton:\r\n\t\t\t\tthis.navigationService.navigate(\"/register\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase TOPBAR_BUTTONS_IDS.profileButton:\r\n\t\t\t\tif (this.isUserLoggedIn) {\r\n\t\t\t\t\tthis.navigationService.navigate(\"/perfil\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.navigationService.navigate(\"/login\");\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase TOPBAR_BUTTONS_IDS.logoutButton:\r\n\t\t\t\tthis.authService.clearSession();\r\n\t\t\t\tthis.navigationService.navigate(\"/login\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase TOPBAR_BUTTONS_IDS.homeButton:\r\n\t\t\t\tthis.navigationService.navigate(\"/\");\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate updateSecondaryButtons() {\r\n\t\tthis.secondaryButtons = [];\r\n\t\tthis.isUserLoggedIn\r\n\t\t\t? this.secondaryButtons.push(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tid: TOPBAR_BUTTONS_IDS.profileButton,\r\n\t\t\t\t\t\tlabel: \"Perfil\",\r\n\t\t\t\t\t\ticon: \"fa fa-user\",\r\n\t\t\t\t\t\tcolor: \"secondary\",\r\n\t\t\t\t\t\tkind: \"secondary\",\r\n\t\t\t\t\t\tdisabled: false,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tid: TOPBAR_BUTTONS_IDS.logoutButton,\r\n\t\t\t\t\t\tlabel: \"Cerrar sesión\",\r\n\t\t\t\t\t\ticon: \"fa fa-sign-out\",\r\n\t\t\t\t\t\tcolor: \"secondary\",\r\n\t\t\t\t\t\tkind: \"secondary\",\r\n\t\t\t\t\t\tdisabled: false,\r\n\t\t\t\t\t}\r\n\t\t\t  )\r\n\t\t\t: this.secondaryButtons.push(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tid: TOPBAR_BUTTONS_IDS.loginButton,\r\n\t\t\t\t\t\tlabel: \"Iniciar sesión\",\r\n\t\t\t\t\t\ticon: \"fa fa-sign-in\",\r\n\t\t\t\t\t\tcolor: \"secondary\",\r\n\t\t\t\t\t\tkind: \"secondary\",\r\n\t\t\t\t\t\tdisabled: false,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tid: TOPBAR_BUTTONS_IDS.registerButton,\r\n\t\t\t\t\t\tlabel: \"Registrarse\",\r\n\t\t\t\t\t\ticon: \"fa fa-user-plus\",\r\n\t\t\t\t\t\tcolor: \"secondary\",\r\n\t\t\t\t\t\tkind: \"secondary\",\r\n\t\t\t\t\t\tdisabled: false,\r\n\t\t\t\t\t}\r\n\t\t\t  );\r\n\t}\r\n}\r\n",
            "styleUrl": "./app.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "navigationService",
                        "type": "NavigationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 32,
                "jsdoctags": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "navigationService",
                        "type": "NavigationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<app-spinner></app-spinner>\r\n<app-shell\r\n\t[title]=\"this.title\"\r\n\t[mainButton]=\"this.mainButton\"\r\n\t[secondaryButtons]=\"this.secondaryButtons\"\r\n\t(topbarButtonClick)=\"onTopbarButton($event)\"\r\n>\r\n</app-shell>\r\n"
        },
        {
            "name": "CrearCanchaModalComponent",
            "id": "component-CrearCanchaModalComponent-f97256a016fca152a66b542e1feea1510c7f6059a6f400751af843966e1c152e96830f92972b65a5078ed8090b6fa2b788dd2b4c7b5a2de6f5c82326fee7b537",
            "file": "src/app/modulos/canchas/crear-cancha-modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-crear-cancha-modal",
            "styleUrls": [
                "./crear-cancha-modal.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./crear-cancha-modal.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "form",
                    "defaultValue": "{ tipoSuelo: null as number | null }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "{ tipoSuelo: number | null; }",
                    "decorators": []
                },
                {
                    "name": "show",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "tipoSuelos",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "literal type[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "cancel",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter"
                },
                {
                    "name": "close",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter"
                },
                {
                    "name": "save",
                    "defaultValue": "new EventEmitter<{ tipoSuelo: number }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onCancel",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClose",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSave",
                    "args": [
                        {
                            "name": "formRef",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "formRef",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "AppButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AppButtonComponent } from '../../components/buttons/button.component';\r\n\r\n@Component({\r\n  selector: 'app-crear-cancha-modal',\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule, AppButtonComponent],\r\n  templateUrl: './crear-cancha-modal.component.html',\r\n  styleUrls: ['./crear-cancha-modal.component.scss']\r\n})\r\nexport class CrearCanchaModalComponent {\r\n  @Input() show = false;\r\n  @Input() tipoSuelos: { value: number; label: string }[] = [];\r\n  @Input() form = { tipoSuelo: null as number | null };\r\n  @Output() close = new EventEmitter<void>();\r\n  @Output() cancel = new EventEmitter<void>();\r\n  @Output() save = new EventEmitter<{ tipoSuelo: number }>();\r\n\r\n  onClose() {\r\n    this.close.emit();\r\n  }\r\n\r\n  onCancel() {\r\n    this.cancel.emit();\r\n  }\r\n\r\n  onSave(formRef: any) {\r\n    if (this.form.tipoSuelo) {\r\n      this.save.emit({ tipoSuelo: this.form.tipoSuelo });\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".modal-backdrop {\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100vw;\r\n\theight: 100vh;\r\n\tbackground: rgba(0, 0, 0, 0.5);\r\n\tz-index: 1000;\r\n}\r\n\r\n.modern-modal {\r\n\tposition: fixed;\r\n\ttop: 50%;\r\n\tleft: 50%;\r\n\ttransform: translate(-50%, -50%);\r\n\tbackground: var(--color-bg-alt);\r\n\tborder-radius: 12px;\r\n\tbox-shadow: 0 8px 32px rgba(0, 0, 0, 0.25);\r\n\tz-index: 1001;\r\n\tmin-width: 340px;\r\n\tmax-width: 95vw;\r\n\tpadding: 0;\r\n\tanimation: modalFadeIn 0.2s;\r\n}\r\n\r\n@keyframes modalFadeIn {\r\n\tfrom {\r\n\t\topacity: 0;\r\n\t\ttransform: translate(-50%, -60%);\r\n\t}\r\n\tto {\r\n\t\topacity: 1;\r\n\t\ttransform: translate(-50%, -50%);\r\n\t}\r\n}\r\n\r\n.modal-header {\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n\tpadding: 1rem 1.5rem 0.5rem 1.5rem;\r\n\tborder-bottom: 1px solid #eee;\r\n\tcolor: var(--color-primary, #1976d2);\r\n}\r\n\r\n.close-btn {\r\n\tbackground: none;\r\n\tborder: none;\r\n\tfont-size: 1.5rem;\r\n\tcursor: pointer;\r\n\tcolor: #888;\r\n}\r\n\r\n.modal-body {\r\n\tpadding: 1.5rem;\r\n\r\n\tlabel {\r\n\t\tcolor: var(--color-secondary, #1976d2);\r\n\t}\r\n}\r\n\r\n.form-group {\r\n\tmargin-bottom: 1.5rem;\r\n}\r\n\r\n.modal-footer {\r\n\tdisplay: flex;\r\n\tjustify-content: flex-end;\r\n\tgap: 1rem;\r\n\tpadding: 1rem 1.5rem 1.5rem 1.5rem;\r\n\tborder-top: 1px solid #eee;\r\n}\r\n\r\n.btn {\r\n\tborder: none;\r\n\tborder-radius: 4px;\r\n\tpadding: 0.5rem 1.2rem;\r\n\tfont-size: 1rem;\r\n\tcursor: pointer;\r\n\ttransition: background 0.2s;\r\n}\r\n\r\n.btn-primary {\r\n\tbackground: #1976d2;\r\n\tcolor: #fff;\r\n}\r\n\r\n.btn-secondary {\r\n\tbackground: #eee;\r\n\tcolor: #333;\r\n}\r\n\r\n.btn-success {\r\n\tbackground: #43a047;\r\n\tcolor: #fff;\r\n}\r\n\r\n.btn:disabled {\r\n\topacity: 0.6;\r\n\tcursor: not-allowed;\r\n}\r\n\r\n.select-control {\r\n\twidth: 100%;\r\n\tpadding: 0.5rem 0.75rem;\r\n\tborder: 1px solid #ccc;\r\n\tborder-radius: 4px;\r\n\tfont-size: 1rem;\r\n\tbackground: #fafbfc;\r\n\tcolor: #222;\r\n\ttransition: border-color 0.2s;\r\n\tmargin-top: 0.25rem;\r\n}\r\n.select-control:focus {\r\n\tborder-color: #1976d2;\r\n\toutline: none;\r\n}\r\n",
                    "styleUrl": "./crear-cancha-modal.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<ng-container *ngIf=\"show\">\r\n  <div class=\"modal-backdrop\"></div>\r\n  <div class=\"modal modern-modal\">\r\n    <div class=\"modal-header\">\r\n      <h2>Nueva Cancha</h2>\r\n      <button class=\"close-btn\" (click)=\"onClose()\">&times;</button>\r\n    </div>\r\n    <form (ngSubmit)=\"onSave(canchaForm)\" #canchaForm=\"ngForm\" class=\"modal-body\">\r\n      <div class=\"form-group\">\r\n        <label for=\"tipoSuelo\">Tipo de Suelo</label>\r\n        <select id=\"tipoSuelo\" name=\"tipoSuelo\" [(ngModel)]=\"form.tipoSuelo\" required class=\"form-control select-control\">\r\n          <option [ngValue]=\"null\" disabled selected>Seleccione un tipo</option>\r\n          <option *ngFor=\"let ts of tipoSuelos\" [ngValue]=\"ts.value\">{{ ts.label }}</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <app-button\r\n          [button]=\"{ id: 'cancel', label: 'Cancelar', kind: 'secondary', type: 'button' }\"\r\n          (buttonClick)=\"onCancel()\"\r\n        ></app-button>\r\n        <app-button\r\n          [button]=\"{ id: 'save', label: 'Guardar', kind: 'main', type: 'submit', disabled: !canchaForm.form.valid }\"\r\n        ></app-button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</ng-container>\r\n"
        },
        {
            "name": "ListComponent",
            "id": "component-ListComponent-d5cfc55abd47f7811a3edac01a459aeb9fc3f4fe3ff76d98ecb48905261985baff44ddffa2726a05d46e5301dfe372cdc0c77bfccc96e7cc074db113ac963c35",
            "file": "src/app/components/list/list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-list",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./list.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "columns",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "ListColumn<TItem>[]",
                    "decorators": []
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "Observable<TItem[]>",
                    "decorators": []
                },
                {
                    "name": "listId",
                    "defaultValue": "'list-id'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "pageIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "pageSize",
                    "defaultValue": "10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "pageSizeOptions",
                    "defaultValue": "[5, 10, 25, 50, 100]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "number[]",
                    "decorators": []
                },
                {
                    "name": "totalItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "Observable<number>",
                    "decorators": []
                },
                {
                    "name": "totalPages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "Observable<number>",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "delete",
                    "defaultValue": "new EventEmitter<TItem>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "EventEmitter"
                },
                {
                    "name": "edit",
                    "defaultValue": "new EventEmitter<TItem>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "EventEmitter"
                },
                {
                    "name": "pageChange",
                    "defaultValue": "new EventEmitter<{\r\n\t\tpageIndex: number;\r\n\t\tpageSize: number;\r\n\t}>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "isMobile",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "openedMenuRow",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TItem | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 49
                }
            ],
            "methodsClass": [
                {
                    "name": "checkMobile",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "closeMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "deleteRow",
                    "args": [
                        {
                            "name": "row",
                            "type": "TItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "row",
                            "type": "TItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "editRow",
                    "args": [
                        {
                            "name": "row",
                            "type": "TItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "row",
                            "type": "TItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onPageChange",
                    "args": [
                        {
                            "name": "delta",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "delta",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onPageSizeChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onResize",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'window:resize'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "toggleMenu",
                    "args": [
                        {
                            "name": "row",
                            "type": "TItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "row",
                            "type": "TItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56
                }
            ],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n\tComponent,\r\n\tInput,\r\n\tOutput,\r\n\tEventEmitter,\r\n\tHostListener,\r\n} from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { ListColumn, ListRow } from \"./models\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { listActions } from \"./state/list.actions\";\r\nimport { FormsModule } from \"@angular/forms\";\r\n\r\n@Component({\r\n\tselector: \"app-list\",\r\n\tstandalone: true,\r\n\timports: [CommonModule, FormsModule],\r\n\ttemplateUrl: \"./list.component.html\",\r\n\tstyleUrl: \"./list.component.scss\",\r\n})\r\nexport class ListComponent<TItem> {\r\n\t@Input()\r\n\tpublic columns: ListColumn<TItem>[] = [];\r\n\r\n\t@Input()\r\n\tpublic data: Observable<TItem[]>;\r\n\r\n\t@Input()\r\n\tpublic totalItems: Observable<number>;\r\n\r\n\t@Input()\r\n\tpublic totalPages: Observable<number>;\r\n\r\n\t@Output() edit = new EventEmitter<TItem>();\r\n\t@Output() delete = new EventEmitter<TItem>();\r\n\r\n\t@Input() pageSizeOptions: number[] = [5, 10, 25, 50, 100];\r\n\t@Input() pageSize: number = 10;\r\n\t@Input() pageIndex: number = 0;\r\n\t@Input() listId: string = 'list-id';\r\n\r\n\t@Output() pageChange = new EventEmitter<{\r\n\t\tpageIndex: number;\r\n\t\tpageSize: number;\r\n\t}>();\r\n\r\n\tisMobile = false;\r\n\topenedMenuRow: TItem | null = null;\r\n\r\n\tconstructor(private store: Store) {\r\n\t\tthis.checkMobile();\r\n\t}\r\n\r\n\t@HostListener(\"window:resize\")\r\n\tonResize() {\r\n\t\tthis.checkMobile();\r\n\t}\r\n\r\n\tprivate checkMobile() {\r\n\t\tthis.isMobile = window.innerWidth <= 600;\r\n\t}\r\n\r\n\ttoggleMenu(row: TItem) {\r\n\t\tthis.openedMenuRow = this.openedMenuRow === row ? null : row;\r\n\t}\r\n\r\n\tcloseMenu() {\r\n\t\tthis.openedMenuRow = null;\r\n\t}\r\n\r\n\teditRow(row: TItem) {\r\n\t\tthis.edit.emit(row);\r\n\t}\r\n\r\n\tdeleteRow(row: TItem) {\r\n\t\tthis.delete.emit(row);\r\n\t}\r\n\r\n\tonPageSizeChange(event: Event) {\r\n\t\tconst value = +(event.target as HTMLSelectElement).value;\r\n\t\tthis.pageSize = value;\r\n\t\tthis.pageIndex = 0;\r\n\t\tthis.store.dispatch(\r\n\t\t\tlistActions.pageChanged({\r\n\t\t\t\tpageIndex: this.pageIndex,\r\n\t\t\t\tpageSize: this.pageSize,\r\n\t\t\t\tlistId: this.listId\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\tonPageChange(delta: number) {\r\n\t\tthis.totalPages\r\n\t\t\t?.subscribe((tp) => {\r\n\t\t\t\tconst totalPages = tp ?? 1;\r\n\t\t\t\tconst newIndex = this.pageIndex + delta;\r\n\t\t\t\tif (newIndex >= 0 && newIndex < totalPages) {\r\n\t\t\t\t\tthis.pageIndex = newIndex;\r\n\t\t\t\t\tthis.store.dispatch(\r\n\t\t\t\t\t\tlistActions.pageChanged({\r\n\t\t\t\t\t\t\tpageIndex: this.pageIndex,\r\n\t\t\t\t\t\t\tpageSize: this.pageSize,\r\n\t\t\t\t\t\t\tlistId: this.listId\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.unsubscribe();\r\n\t}\r\n}\r\n",
            "styleUrl": "./list.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 49,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<table [id]=\"this.listId\" class=\"app-list-table\">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th\r\n\t\t\t\t*ngFor=\"let col of columns\"\r\n\t\t\t\t[ngClass]=\"col.classes\"\r\n\t\t\t>\r\n\t\t\t\t{{ col.header }}\r\n\t\t\t</th>\r\n\t\t\t<th></th>\r\n\t\t\t<!-- Columna de acciones -->\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr *ngFor=\"let row of data | async\">\r\n\t\t\t<td\r\n\t\t\t\t*ngFor=\"let col of columns\"\r\n\t\t\t\t[ngClass]=\"col.classes\"\r\n\t\t\t>\r\n\t\t\t\t{{ row[col.property] }}\r\n\t\t\t</td>\r\n\t\t\t<td class=\"actions-cell\">\r\n\t\t\t\t<ng-container *ngIf=\"!isMobile; else mobileActions\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\tclass=\"action-btn edit\"\r\n\t\t\t\t\t\t(click)=\"editRow(row)\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<span class=\"fa fa-pencil\"></span>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\tclass=\"action-btn delete\"\r\n\t\t\t\t\t\t(click)=\"deleteRow(row)\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<span class=\"fa fa-trash\"></span>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</ng-container>\r\n\t\t\t\t<ng-template #mobileActions>\r\n\t\t\t\t\t<div class=\"actions-menu-wrapper\">\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\tclass=\"action-btn menu\"\r\n\t\t\t\t\t\t\t(click)=\"toggleMenu(row)\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<span class=\"fa fa-ellipsis-v\"></span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclass=\"actions-menu\"\r\n\t\t\t\t\t\t\t*ngIf=\"openedMenuRow === row\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\tclass=\"action-btn edit\"\r\n\t\t\t\t\t\t\t\t(click)=\"editRow(row); closeMenu()\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<span class=\"fa fa-pencil\"></span> Editar\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\tclass=\"action-btn delete\"\r\n\t\t\t\t\t\t\t\t(click)=\"deleteRow(row); closeMenu()\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<span class=\"fa fa-trash\"></span> Eliminar\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</ng-template>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n\t<tfoot>\r\n\t\t<tr>\r\n\t\t\t<td\r\n\t\t\t\t[attr.colspan]=\"columns.length + 1\"\r\n\t\t\t\tclass=\"list-footer\"\r\n\t\t\t>\r\n\t\t\t\t<div class=\"list-pagination-footer\">\r\n\t\t\t\t\t<div class=\"footer-left\">\r\n\t\t\t\t\t\t<span class=\"total-items\"\r\n\t\t\t\t\t\t\t>Total: {{ (totalItems | async) ?? 0 }}</span\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"footer-right\">\r\n\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t[ngModel]=\"pageSize\"\r\n\t\t\t\t\t\t\t(ngModelChange)=\"onPageSizeChange($event)\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<option\r\n\t\t\t\t\t\t\t\t*ngFor=\"let size of pageSizeOptions\"\r\n\t\t\t\t\t\t\t\t[value]=\"size\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{{ size }}\r\n\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t<span>por página</span>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t(click)=\"onPageChange(-1)\"\r\n\t\t\t\t\t\t\t[disabled]=\"pageIndex === 0\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t&lt;\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t>Página {{ pageIndex + 1 }} de\r\n\t\t\t\t\t\t\t{{ (totalPages | async) ?? 1 }}</span\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t(click)=\"onPageChange(1)\"\r\n\t\t\t\t\t\t\t[disabled]=\"pageIndex + 1 >= ((totalPages | async) ?? 1)\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t&gt;\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</tfoot>\r\n</table>\r\n"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-10de622813cc0b8c4538f8580f482e408ff6079f3834dd4dd8a8b3220a42ff6a9ef577da6a2bad74522045753baec2de692b12f0717b8ea254628d5c90bde039",
            "file": "src/app/auth/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "email",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "password",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "submitButton",
                    "defaultValue": "{\r\n\t\tid: \"login-button\",\r\n\t\tlabel: \"Iniciar sesión\",\r\n\t\tcolor: \"primary\",\r\n\t\tkind: \"main\",\r\n\t\tdisabled: false,\r\n\t}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "LoginButton",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterLink"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "AppButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { RouterLink } from \"@angular/router\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { NavigationService } from \"../../navigation.service\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { LoginActions } from \"../state/auth.actions\";\r\nimport { AppButtonComponent } from \"../../components/buttons/button.component\";\r\nimport {\r\n\tButtonBase,\r\n\tLoginButton,\r\n} from \"../../components/buttons/button.interfaces\";\r\n\r\n@Component({\r\n\tselector: \"app-login\",\r\n\tstandalone: true,\r\n\timports: [CommonModule, RouterLink, FormsModule, AppButtonComponent],\r\n\ttemplateUrl: \"./login.component.html\",\r\n\tstyleUrl: \"./login.component.scss\",\r\n})\r\nexport class LoginComponent {\r\n\temail = \"\";\r\n\tpassword = \"\";\r\n\tsubmitButton: LoginButton = {\r\n\t\tid: \"login-button\",\r\n\t\tlabel: \"Iniciar sesión\",\r\n\t\tcolor: \"primary\",\r\n\t\tkind: \"main\",\r\n\t\tdisabled: false,\r\n\t};\r\n\r\n\tconstructor(private store: Store, private navService: NavigationService) {}\r\n\r\n\tonSubmit() {\r\n\t\tthis.store.dispatch(\r\n\t\t\tLoginActions.request({\r\n\t\t\t\temail: this.email,\r\n\t\t\t\tpassword: this.password,\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n}\r\n",
            "styleUrl": "./login.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "navService",
                        "type": "NavigationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 30,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "navService",
                        "type": "NavigationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<form\r\n\tclass=\"login-form\"\r\n\t(ngSubmit)=\"onSubmit()\"\r\n\t#loginForm=\"ngForm\"\r\n>\r\n\t<h2>Iniciar sesión</h2>\r\n\t<label\r\n\t\t>Email\r\n\t\t<input\r\n\t\t\ttype=\"email\"\r\n\t\t\tname=\"email\"\r\n\t\t\t[(ngModel)]=\"email\"\r\n\t\t\trequired\r\n\t\t\tautocomplete=\"username\"\r\n\t\t/>\r\n\t</label>\r\n\t<label\r\n\t\t>Contraseña\r\n\t\t<input\r\n\t\t\ttype=\"password\"\r\n\t\t\tname=\"password\"\r\n\t\t\t[(ngModel)]=\"password\"\r\n\t\t\trequired\r\n\t\t\tautocomplete=\"current-password\"\r\n\t\t/>\r\n\t</label>\r\n\t<app-button\r\n\t\tclass=\"login-button\"\r\n\t\t[button]=\"this.submitButton\"\r\n\t\t[classes]=\"['btn-width-100']\"\r\n\t\t(buttonClick)=\"onSubmit()\"\r\n\t/>\r\n\t<div class=\"register-link\">\r\n\t\t¿No tienes cuenta? <a routerLink=\"/register\">Crear cuenta</a>\r\n\t</div>\r\n</form>\r\n"
        },
        {
            "name": "ModalComponent",
            "id": "component-ModalComponent-a5efdadbd1c1ad96622ec7a224616acb5ff7efb6c6f2c40d7e72bc6bef7c16a4e4f4cbbc067c42fe4bbf3624a5d7e168b48a9c4709985e3ffb7b01248a1fc4e7",
            "file": "src/app/components/modal/modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-modal",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./modal.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "closeOnBackdrop",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "open",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "width",
                    "defaultValue": "\"400px\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "closed",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "closeButton",
                    "defaultValue": "{\r\n\t\tid: \"modal-close-button\",\r\n\t\tlabel: \"\",\r\n\t\ticon: \"&times;\",\r\n\t\tkind: \"main\",\r\n\t\tcolor: \"secondary\",\r\n\t\tloading: false,\r\n\t\tdisabled: false,\r\n\t}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ButtonWithId",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        124
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "close",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onBackdropClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "AppButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { AppButtonComponent } from \"../buttons/button.component\";\r\nimport { ButtonWithId } from \"../buttons/button.interfaces\";\r\n\r\n@Component({\r\n\tselector: \"app-modal\",\r\n\tstandalone: true,\r\n\timports: [CommonModule, AppButtonComponent],\r\n\ttemplateUrl: \"./modal.component.html\",\r\n\tstyleUrl: \"./modal.component.scss\",\r\n})\r\nexport class ModalComponent {\r\n\t@Input() open = false;\r\n\t@Input() title = \"\";\r\n\t@Input() width: string = \"400px\";\r\n\t@Input() closeOnBackdrop = true;\r\n\r\n\t@Output() closed = new EventEmitter<void>();\r\n\r\n\tprotected closeButton: ButtonWithId = {\r\n\t\tid: \"modal-close-button\",\r\n\t\tlabel: \"\",\r\n\t\ticon: \"&times;\",\r\n\t\tkind: \"main\",\r\n\t\tcolor: \"secondary\",\r\n\t\tloading: false,\r\n\t\tdisabled: false,\r\n\t};\r\n\r\n\tonBackdropClick(event: MouseEvent) {\r\n\t\tif (this.closeOnBackdrop && event.target === event.currentTarget) {\r\n\t\t\tthis.closed.emit();\r\n\t\t}\r\n\t}\r\n\r\n\tclose() {\r\n\t\tthis.closed.emit();\r\n\t}\r\n}\r\n",
            "styleUrl": "./modal.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div\r\n\tclass=\"modal-backdrop\"\r\n\t*ngIf=\"open\"\r\n\t(click)=\"onBackdropClick($event)\"\r\n>\r\n\t<div\r\n\t\tclass=\"modal-content\"\r\n\t\t[style.width]=\"width\"\r\n\t\t(click)=\"$event.stopPropagation()\"\r\n\t>\r\n\t\t<div class=\"modal-header\">\r\n\t\t\t<span class=\"modal-title\">{{ title }}</span>\r\n\t\t\t<app-button [button]=\"this.closeButton\" />\r\n\t\t</div>\r\n\t\t<div class=\"modal-body\">\r\n\t\t\t<ng-content></ng-content>\r\n\t\t</div>\r\n\t\t<div class=\"modal-footer\">\r\n\t\t\t<ng-content select=\"[modalFooter]\"></ng-content>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n"
        },
        {
            "name": "PerfilComponent",
            "id": "component-PerfilComponent-f2ceb5d1ba8df3cb8d02a47cbf643b9107793d4233dc6845765a8e6b80c5604a2e9acc5ed71e9244f0224715a0f226ac0082ca4fa63426dd258d49b08706b2fb",
            "file": "src/app/perfil/perfil.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-perfil",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./perfil.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeSection",
                    "defaultValue": "\"perfil\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"perfil\" | \"canchas\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "destroy$",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "form",
                    "defaultValue": "{\r\n\t\tuserName: \"\",\r\n\t\temail: \"\",\r\n\t\troles: [],\r\n\t\tsocio: {\r\n\t\t\tid: \"\",\r\n\t\t\tnumeroSocio: 0,\r\n\t\t\tnombre: \"\",\r\n\t\t\tapellido: \"\",\r\n\t\t\ttelefono: \"\",\r\n\t\t\temail: \"\",\r\n\t\t},\r\n\t}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserData",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "isEditSocio",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "isEditUser",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "socioFormBackup",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<> | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "userFormBackup",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<UserData> | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "onCancelEditSocio",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onCancelEditUser",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onEditSocio",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onEditUser",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSaveSocio",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 101,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSaveUser",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "AdminCanchasComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { AuthService } from \"../auth/auth.service\";\r\nimport { filter, Subject, takeUntil } from \"rxjs\";\r\nimport { AdminCanchasComponent } from \"../modulos/canchas/admin-canchas.component\";\r\nimport { UserData } from \"../auth/models\";\r\n\r\n@Component({\r\n\tselector: \"app-perfil\",\r\n\tstandalone: true,\r\n\timports: [CommonModule, FormsModule, AdminCanchasComponent],\r\n\ttemplateUrl: \"./perfil.component.html\",\r\n\tstyleUrl: \"./perfil.component.scss\",\r\n})\r\nexport class PerfilComponent implements OnInit, OnDestroy {\r\n\tprivate destroy$ = new Subject<void>();\r\n\r\n\tform: UserData = {\r\n\t\tuserName: \"\",\r\n\t\temail: \"\",\r\n\t\troles: [],\r\n\t\tsocio: {\r\n\t\t\tid: \"\",\r\n\t\t\tnumeroSocio: 0,\r\n\t\t\tnombre: \"\",\r\n\t\t\tapellido: \"\",\r\n\t\t\ttelefono: \"\",\r\n\t\t\temail: \"\",\r\n\t\t},\r\n\t};\r\n\r\n\tactiveSection: \"perfil\" | \"canchas\" = \"perfil\";\r\n\r\n\t// Estados de edición\r\n\tisEditUser = false;\r\n\tisEditSocio = false;\r\n\tuserFormBackup: Partial<UserData> | null = null;\r\n\tsocioFormBackup: Partial<UserData[\"socio\"]> | null = null;\r\n\r\n\tconstructor(private authService: AuthService) {}\r\n\r\n\tpublic ngOnInit() {\r\n\t\tthis.authService.userData$\r\n\t\t\t.pipe(\r\n\t\t\t\ttakeUntil(this.destroy$),\r\n\t\t\t\tfilter((x): x is UserData => !!x)\r\n\t\t\t)\r\n\t\t\t.subscribe((userData) => {\r\n\t\t\t\tthis.form = { ...userData };\r\n\t\t\t});\r\n\t}\r\n\r\n\tpublic ngOnDestroy(): void {\r\n\t\tthis.destroy$.next();\r\n\t\tthis.destroy$.complete();\r\n\t}\r\n\r\n\t// Edición datos usuario\r\n\tonEditUser() {\r\n\t\tthis.isEditUser = true;\r\n\t\tthis.userFormBackup = {\r\n\t\t\tuserName: this.form.userName,\r\n\t\t\temail: this.form.socio.email,\r\n\t\t};\r\n\t}\r\n\r\n\tonCancelEditUser() {\r\n\t\tif (this.userFormBackup) {\r\n\t\t\tthis.form.userName = this.userFormBackup.userName || \"\";\r\n\t\t\tthis.form.socio.email = this.userFormBackup.email || \"\";\r\n\t\t}\r\n\t\tthis.isEditUser = false;\r\n\t}\r\n\r\n\tonSaveUser() {\r\n\t\t// Aquí iría la lógica para guardar los datos editados del usuario\r\n\t\tthis.isEditUser = false;\r\n\t}\r\n\r\n\t// Edición datos socio\r\n\tonEditSocio() {\r\n\t\tthis.isEditSocio = true;\r\n\t\tthis.socioFormBackup = { ...this.form.socio };\r\n\t}\r\n\r\n\tonCancelEditSocio() {\r\n\t\tif (this.socioFormBackup) {\r\n\t\t\tthis.form.socio = {\r\n\t\t\t\tid: this.socioFormBackup.id ?? \"\",\r\n\t\t\t\tnumeroSocio: this.socioFormBackup.numeroSocio ?? 0,\r\n\t\t\t\tnombre: this.socioFormBackup.nombre ?? \"\",\r\n\t\t\t\tapellido: this.socioFormBackup.apellido ?? \"\",\r\n\t\t\t\ttelefono: this.socioFormBackup.telefono ?? \"\",\r\n\t\t\t\temail: this.socioFormBackup.email ?? \"\",\r\n\t\t\t};\r\n\t\t}\r\n\t\tthis.isEditSocio = false;\r\n\t}\r\n\r\n\tonSaveSocio() {\r\n\t\t// Aquí iría la lógica para guardar los datos editados del socio\r\n\t\tthis.isEditSocio = false;\r\n\t}\r\n\r\n\tonSubmit() {\r\n\t\t// Aquí iría la lógica para actualizar los datos del usuario\r\n\t\talert(\"Datos actualizados (simulado): \" + JSON.stringify(this.form));\r\n\t}\r\n}\r\n",
            "styleUrl": "./perfil.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 39,
                "jsdoctags": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<div class=\"perfil-panel\">\r\n\t<nav class=\"perfil-sidebar\">\r\n\t\t<h3>Panel de usuario</h3>\r\n\t\t<button\r\n\t\t\t[class.active]=\"activeSection === 'perfil'\"\r\n\t\t\t(click)=\"activeSection = 'perfil'\"\r\n\t\t>\r\n\t\t\tPerfil\r\n\t\t</button>\r\n\t\t<button\r\n\t\t\t*ngIf=\"form.roles.includes('Admin')\"\r\n\t\t\t[class.active]=\"activeSection === 'canchas'\"\r\n\t\t\t(click)=\"activeSection = 'canchas'\"\r\n\t\t>\r\n\t\t\tCanchas\r\n\t\t</button>\r\n\t</nav>\r\n\t<section class=\"perfil-content\">\r\n\t\t<ng-container [ngSwitch]=\"activeSection\">\r\n\t\t\t<form\r\n\t\t\t\t*ngSwitchCase=\"'perfil'\"\r\n\t\t\t\t(ngSubmit)=\"onSubmit()\"\r\n\t\t\t\t#perfilForm=\"ngForm\"\r\n\t\t\t>\r\n\t\t\t\t<h2>Perfil</h2>\r\n\t\t\t\t<fieldset class=\"user-section\">\r\n\t\t\t\t\t<legend>Datos de usuario</legend>\r\n\t\t\t\t\t<label>\r\n\t\t\t\t\t\tNombre de usuario\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tname=\"userName\"\r\n\t\t\t\t\t\t\t[(ngModel)]=\"form.userName\"\r\n\t\t\t\t\t\t\t[readonly]=\"!isEditUser\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<label>\r\n\t\t\t\t\t\tEmail\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\t[(ngModel)]=\"form.socio.email\"\r\n\t\t\t\t\t\t\t[readonly]=\"!isEditUser\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<label>\r\n\t\t\t\t\t\tRoles\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tname=\"roles\"\r\n\t\t\t\t\t\t\t[value]=\"form.roles.length > 0 ? form.roles.join(', ') : '-'\"\r\n\t\t\t\t\t\t\treadonly\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<div class=\"edit-actions\">\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t*ngIf=\"!isEditUser\"\r\n\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t(click)=\"onEditUser()\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tEditar\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<span *ngIf=\"isEditUser\">\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t(click)=\"onCancelEditUser()\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tCancelar\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t(click)=\"onSaveUser()\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tGuardar\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</fieldset>\r\n\t\t\t\t<fieldset class=\"socio-section\">\r\n\t\t\t\t\t<legend>Datos de socio</legend>\r\n\t\t\t\t\t<label>\r\n\t\t\t\t\t\tNombre\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tname=\"socioNombre\"\r\n\t\t\t\t\t\t\t[(ngModel)]=\"form.socio.nombre\"\r\n\t\t\t\t\t\t\t[readonly]=\"!isEditSocio\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<label>\r\n\t\t\t\t\t\tApellido\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tname=\"socioApellido\"\r\n\t\t\t\t\t\t\t[(ngModel)]=\"form.socio.apellido\"\r\n\t\t\t\t\t\t\t[readonly]=\"!isEditSocio\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<label>\r\n\t\t\t\t\t\tTeléfono\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"tel\"\r\n\t\t\t\t\t\t\tname=\"socioTelefono\"\r\n\t\t\t\t\t\t\t[(ngModel)]=\"form.socio.telefono\"\r\n\t\t\t\t\t\t\t[readonly]=\"!isEditSocio\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<label>\r\n\t\t\t\t\t\tNúmero de socio\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tname=\"numeroSocio\"\r\n\t\t\t\t\t\t\t[(ngModel)]=\"form.socio.numeroSocio\"\r\n\t\t\t\t\t\t\treadonly\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<div class=\"edit-actions\">\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t*ngIf=\"!isEditSocio\"\r\n\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t(click)=\"onEditSocio()\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tEditar\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<span *ngIf=\"isEditSocio\">\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t(click)=\"onCancelEditSocio()\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tCancelar\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t(click)=\"onSaveSocio()\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tGuardar\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</fieldset>\r\n\t\t\t</form>\r\n\t\t\t<app-admin-canchas *ngSwitchCase=\"'canchas'\"></app-admin-canchas>\r\n\t\t</ng-container>\r\n\t</section>\r\n</div>\r\n"
        },
        {
            "name": "RegisterComponent",
            "id": "component-RegisterComponent-27de7cdcd0a93001948c8f542a31c6a61dae5c37897c1a599a1a03b284c329d2ca59c6260dfc692e810876a9c509dfb5ae1027edd9e1a4251c663a5850ac7ea3",
            "file": "src/app/auth/register/register.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-register",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./register.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "apellido",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "destroy$",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "email",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "errorMsg",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "nombre",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "password",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "registerButton",
                    "defaultValue": "{\r\n\t\tid: \"register-button\",\r\n\t\tlabel: \"Registrarse\",\r\n\t\tcolor: \"primary\",\r\n\t\tkind: \"main\",\r\n\t\tdisabled: false,\r\n\t}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RegisterButton",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "showError",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "showSuccess",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "telefono",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "username",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterLink"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "AppButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { RouterLink } from \"@angular/router\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { AuthService } from \"../auth.service\";\r\nimport { Subject, takeUntil } from \"rxjs\";\r\nimport { NavigationService } from \"../../navigation.service\";\r\nimport { AppButtonComponent } from \"../../components/buttons/button.component\";\r\nimport { RegisterButton } from \"../../components/buttons/button.interfaces\";\r\nimport { RegisterRequest } from \"../models\";\r\n\r\n@Component({\r\n\tselector: \"app-register\",\r\n\ttemplateUrl: \"./register.component.html\",\r\n\tstyleUrl: \"./register.component.scss\",\r\n\tstandalone: true,\r\n\timports: [CommonModule, RouterLink, FormsModule, AppButtonComponent],\r\n})\r\nexport class RegisterComponent implements OnDestroy {\r\n\tprivate destroy$ = new Subject<void>();\r\n\t// Datos de usuario\r\n\tusername = \"\";\r\n\temail = \"\";\r\n\tpassword = \"\";\r\n\r\n\t// Datos del socio\r\n\tnombre = \"\";\r\n\tapellido = \"\";\r\n\ttelefono = \"\";\r\n\r\n\tshowSuccess = false;\r\n\tshowError = false;\r\n\terrorMsg = \"\";\r\n\r\n\tregisterButton: RegisterButton = {\r\n\t\tid: \"register-button\",\r\n\t\tlabel: \"Registrarse\",\r\n\t\tcolor: \"primary\",\r\n\t\tkind: \"main\",\r\n\t\tdisabled: false,\r\n\t};\r\n\r\n\tconstructor(\r\n\t\tprivate readonly authService: AuthService,\r\n\t\tprivate readonly navService: NavigationService\r\n\t) {}\r\n\r\n\tpublic ngOnDestroy(): void {\r\n\t\tthis.destroy$.next();\r\n\t\tthis.destroy$.complete();\r\n\t}\r\n\r\n\tonSubmit() {\r\n\t\tconst registerRequest: RegisterRequest = {\r\n\t\t\tnombre: this.nombre,\r\n\t\t\tapellido: this.apellido,\r\n\t\t\ttelefono: this.telefono,\r\n\t\t\tusername: this.username,\r\n\t\t\temail: this.email,\r\n\t\t\tpassword: this.password,\r\n\t\t};\r\n\r\n\t\tthis.authService\r\n\t\t\t.register(registerRequest)\r\n\t\t\t.pipe(takeUntil(this.destroy$))\r\n\t\t\t.subscribe({\r\n\t\t\t\tnext: () => {\r\n\t\t\t\t\tthis.showError = false;\r\n\t\t\t\t\tthis.showSuccess = true;\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tthis.showSuccess = false;\r\n\t\t\t\t\t\tthis.navService.navigate(\"/login\");\r\n\t\t\t\t\t}, 1500);\r\n\t\t\t\t},\r\n\t\t\t\terror: (error) => {\r\n\t\t\t\t\tthis.showSuccess = false;\r\n\t\t\t\t\tthis.showError = true;\r\n\t\t\t\t\tthis.errorMsg =\r\n\t\t\t\t\t\terror?.error?.message || error.message || \"Error desconocido\";\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tthis.showError = false;\r\n\t\t\t\t\t}, 2500);\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t}\r\n}\r\n",
            "styleUrl": "./register.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "navService",
                        "type": "NavigationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 41,
                "jsdoctags": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "navService",
                        "type": "NavigationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnDestroy"
            ],
            "templateData": "<div\r\n\t*ngIf=\"showSuccess\"\r\n\tclass=\"toast-success\"\r\n>\r\n\t¡Registro exitoso! Redirigiendo al login...\r\n</div>\r\n<div\r\n\t*ngIf=\"showError\"\r\n\tclass=\"toast-error\"\r\n>\r\n\t{{ errorMsg }}\r\n</div>\r\n<form\r\n\tclass=\"register-form\"\r\n\t(ngSubmit)=\"onSubmit()\"\r\n\t#registerForm=\"ngForm\"\r\n>\r\n\t<h2>Crear cuenta</h2>\r\n\r\n\t<!-- Sección: Datos de usuario -->\r\n\t<fieldset class=\"user-section\">\r\n\t\t<legend>Datos de usuario</legend>\r\n\t\t<label>\r\n\t\t\tNombre de Usuario\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tname=\"username\"\r\n\t\t\t\t[(ngModel)]=\"username\"\r\n\t\t\t\trequired\r\n\t\t\t/>\r\n\t\t</label>\r\n\t\t<label>\r\n\t\t\tEmail\r\n\t\t\t<input\r\n\t\t\t\ttype=\"email\"\r\n\t\t\t\tname=\"email\"\r\n\t\t\t\t[(ngModel)]=\"email\"\r\n\t\t\t\trequired\r\n\t\t\t/>\r\n\t\t</label>\r\n\t\t<label>\r\n\t\t\tContraseña\r\n\t\t\t<input\r\n\t\t\t\ttype=\"password\"\r\n\t\t\t\tname=\"password\"\r\n\t\t\t\t[(ngModel)]=\"password\"\r\n\t\t\t\trequired\r\n\t\t\t/>\r\n\t\t</label>\r\n\t</fieldset>\r\n\r\n\t<!-- Sección: Datos del socio -->\r\n\t<fieldset class=\"socio-section\">\r\n\t\t<legend>Datos del socio</legend>\r\n\t\t<label>\r\n\t\t\tNombre\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tname=\"nombre\"\r\n\t\t\t\t[(ngModel)]=\"nombre\"\r\n\t\t\t\trequired\r\n\t\t\t/>\r\n\t\t</label>\r\n\t\t<label>\r\n\t\t\tApellido\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tname=\"apellido\"\r\n\t\t\t\t[(ngModel)]=\"apellido\"\r\n\t\t\t\trequired\r\n\t\t\t/>\r\n\t\t</label>\r\n\t\t<label>\r\n\t\t\tTeléfono\r\n\t\t\t<input\r\n\t\t\t\ttype=\"tel\"\r\n\t\t\t\tname=\"telefono\"\r\n\t\t\t\t[(ngModel)]=\"telefono\"\r\n\t\t\t\trequired\r\n\t\t\t/>\r\n\t\t</label>\r\n\t</fieldset>\r\n\r\n\t<app-button\r\n\t\t[button]=\"registerButton\"\r\n\t\t[classes]=\"['btn-width-100']\"\r\n\t\t[disabled]=\"!registerForm.form.valid\"\r\n\t\t(buttonClick)=\"this.onSubmit()\"\r\n\t/>\r\n\t<div class=\"login-link\">\r\n\t\t¿Ya tienes cuenta? <a routerLink=\"/login\">Iniciar sesión</a>\r\n\t</div>\r\n</form>\r\n"
        },
        {
            "name": "ShellComponent",
            "id": "component-ShellComponent-037fc3945bffd1b80acf2d5df3e23fcbfcd5cdf61ec817b65b8a0ffb87d0ab91331ed5ca6ae0ff857c6d28b8ac5be63a17e6018a7ba9c3b35df61c5322341383",
            "file": "src/app/shell/shell.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-shell",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./shell.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "mainButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "TopbarButton",
                    "decorators": []
                },
                {
                    "name": "secondaryButtons",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "TopbarButton[]",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "topbarButtonClick",
                    "defaultValue": "new EventEmitter<TopbarButtonClickEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onTopbarButton",
                    "args": [
                        {
                            "name": "event",
                            "type": "TopbarButtonClickEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "TopbarButtonClickEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "TopbarComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { RouterOutlet } from \"@angular/router\";\r\nimport { TopbarComponent } from \"../topbar/topbar.component\";\r\nimport { TopbarButton } from \"../components/buttons/button.interfaces\";\r\n\r\nexport type TopbarButtonClickEvent = {\r\n\tbutton: TopbarButton;\r\n\tindex: number;\r\n\ttype: \"main\" | \"secondary\";\r\n};\r\n\r\n@Component({\r\n\tselector: \"app-shell\",\r\n\tstandalone: true,\r\n\timports: [RouterOutlet, TopbarComponent],\r\n\ttemplateUrl: \"./shell.component.html\",\r\n\tstyleUrl: \"./shell.component.scss\",\r\n})\r\nexport class ShellComponent {\r\n\t@Input() title: string = \"\";\r\n\t@Input() mainButton!: TopbarButton;\r\n\t@Input() secondaryButtons: TopbarButton[] = [];\r\n\r\n\t@Output() topbarButtonClick = new EventEmitter<TopbarButtonClickEvent>();\r\n\r\n\tonTopbarButton(event: TopbarButtonClickEvent): void {\r\n\t\tthis.topbarButtonClick.emit(event);\r\n\t}\r\n}\r\n",
            "styleUrl": "./shell.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<app-topbar\r\n\t[title]=\"title\"\r\n\t[mainButton]=\"mainButton\"\r\n\t[secondaryButtons]=\"secondaryButtons\"\r\n\t(buttonClick)=\"onTopbarButton($event)\"\r\n></app-topbar>\r\n<main class=\"app-container main-below-topbar\">\r\n\t<router-outlet></router-outlet>\r\n</main>\r\n"
        },
        {
            "name": "SpinnerComponent",
            "id": "component-SpinnerComponent-61ab685a60f99d187ef8a4c18f95bd9e38eea02d83d77e26e99f3e7cd5611677766e44748f121c0264ed52e92daf0abd07020f84db794abd6b0991bd18e8c778",
            "file": "src/app/spinner/spinner.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-spinner",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./spinner.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "spinnerService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SpinnerService",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { SpinnerService } from \"../spinner.service\";\r\n\r\n@Component({\r\n\tselector: \"app-spinner\",\r\n\tstandalone: true,\r\n\timports: [CommonModule],\r\n\ttemplateUrl: \"./spinner.component.html\",\r\n\tstyleUrl: \"./spinner.component.scss\",\r\n})\r\nexport class SpinnerComponent {\r\n\tconstructor(public spinnerService: SpinnerService) {}\r\n}\r\n",
            "styleUrl": "./spinner.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "spinnerService",
                        "type": "SpinnerService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "spinnerService",
                        "type": "SpinnerService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<div\r\n\tclass=\"spinner-overlay\"\r\n\t*ngIf=\"spinnerService.loading$ | async\"\r\n>\r\n\t<div class=\"spinner\"></div>\r\n</div>\r\n"
        },
        {
            "name": "TopbarComponent",
            "id": "component-TopbarComponent-c7f5607d86c4efbd4cefba0e473f080235b2fe4886e7ec70035fa036ecab7fac408c2909d7c798116997848ab97e7c5181a25a053f9a1c6ce4bef22f183dea9c",
            "file": "src/app/topbar/topbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-topbar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./topbar.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "mainButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "TopbarButton",
                    "decorators": []
                },
                {
                    "name": "secondaryButtons",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "TopbarButton[]",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "buttonClick",
                    "defaultValue": "new EventEmitter<{\r\n\t\tbutton: TopbarButton;\r\n\t\tindex: number;\r\n\t\ttype: \"main\" | \"secondary\";\r\n\t}>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "darkTheme",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "showMenu",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "showMenuButton",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onMainClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSecondaryClick",
                    "args": [
                        {
                            "name": "btn",
                            "type": "TopbarButton",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "idx",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "btn",
                            "type": "TopbarButton",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "idx",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSecondaryClickMobile",
                    "args": [
                        {
                            "name": "btn",
                            "type": "TopbarButton",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "idx",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "btn",
                            "type": "TopbarButton",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "idx",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleTheme",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "AppButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, OnInit } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { BreakpointObserver } from \"@angular/cdk/layout\";\r\nimport { AppButtonComponent } from \"../components/buttons/button.component\";\r\nimport { TopbarButton } from \"../components/buttons/button.interfaces\";\r\n\r\n@Component({\r\n\tselector: \"app-topbar\",\r\n\tstandalone: true,\r\n\timports: [CommonModule, AppButtonComponent],\r\n\ttemplateUrl: \"./topbar.component.html\",\r\n\tstyleUrl: \"./topbar.component.scss\",\r\n})\r\nexport class TopbarComponent implements OnInit {\r\n\t@Input() title: string = \"\";\r\n\t@Input() mainButton!: TopbarButton;\r\n\t@Input() secondaryButtons: TopbarButton[] = [];\r\n\r\n\t@Output() buttonClick = new EventEmitter<{\r\n\t\tbutton: TopbarButton;\r\n\t\tindex: number;\r\n\t\ttype: \"main\" | \"secondary\";\r\n\t}>();\r\n\r\n\tdarkTheme = false;\r\n\tshowMenuButton = false;\r\n\tshowMenu = false;\r\n\r\n\tconstructor(private breakpointObserver: BreakpointObserver) {}\r\n\r\n\tngOnInit() {\r\n\t\t// Leer preferencia de tema guardada\r\n\t\tconst savedTheme = localStorage.getItem(\"theme\");\r\n\t\tif (savedTheme === \"dark\") {\r\n\t\t\tthis.darkTheme = true;\r\n\t\t\tdocument.body.classList.add(\"dark-theme\");\r\n\t\t} else {\r\n\t\t\tthis.darkTheme = false;\r\n\t\t\tdocument.body.classList.remove(\"dark-theme\");\r\n\t\t}\r\n\t\tthis.breakpointObserver\r\n\t\t\t.observe([\"(max-width: 900px)\", \"(max-width: 600px)\"])\r\n\t\t\t.subscribe((result) => {\r\n\t\t\t\tif (result.matches) {\r\n\t\t\t\t\tthis.showMenuButton = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.showMenuButton = false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t}\r\n\r\n\ttoggleTheme() {\r\n\t\tthis.darkTheme = !this.darkTheme;\r\n\t\tif (this.darkTheme) {\r\n\t\t\tdocument.body.classList.add(\"dark-theme\");\r\n\t\t\tlocalStorage.setItem(\"theme\", \"dark\");\r\n\t\t} else {\r\n\t\t\tdocument.body.classList.remove(\"dark-theme\");\r\n\t\t\tlocalStorage.setItem(\"theme\", \"light\");\r\n\t\t}\r\n\t}\r\n\r\n\ttoggleMenu() {\r\n\t\tthis.showMenu = !this.showMenu;\r\n\t}\r\n\r\n\tonMainClick() {\r\n\t\tthis.buttonClick.emit({ button: this.mainButton, index: 0, type: \"main\" });\r\n\t}\r\n\r\n\tonSecondaryClick(btn: TopbarButton, idx: number) {\r\n\t\tthis.buttonClick.emit({ button: btn, index: idx, type: \"secondary\" });\r\n\t}\r\n\r\n\tonSecondaryClickMobile(btn: TopbarButton, idx: number) {\r\n\t\tthis.onSecondaryClick(btn, idx);\r\n\t\tthis.showMenu = false;\r\n\t}\r\n}\r\n",
            "styleUrl": "./topbar.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "breakpointObserver",
                        "type": "BreakpointObserver",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 27,
                "jsdoctags": [
                    {
                        "name": "breakpointObserver",
                        "type": "BreakpointObserver",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<nav class=\"topbar\">\r\n\t<app-button\r\n\t\t[button]=\"this.mainButton\"\r\n\t\t[index]=\"0\"\r\n\t\t(buttonClick)=\"onMainClick()\"\r\n\t/>\r\n\t<span class=\"topbar-title\">{{ title }}</span>\r\n\t<div class=\"secondary-btns\">\r\n\t\t<label class=\"theme-switch\">\r\n\t\t\t<input\r\n\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t[checked]=\"darkTheme\"\r\n\t\t\t\t(change)=\"toggleTheme()\"\r\n\t\t\t/>\r\n\t\t\t<span class=\"slider\"></span>\r\n\t\t\t<span class=\"theme-icon\"\r\n\t\t\t\t><i [class]=\"darkTheme ? 'fa fa-moon' : 'fa fa-sun'\"></i\r\n\t\t\t></span>\r\n\t\t</label>\r\n\t\t<!-- Botones secundarios normales (solo desktop) -->\r\n\t\t<ng-container\r\n\t\t\t*ngIf=\"!this.showMenuButton\"\r\n\t\t\tclass=\"secondary-btns-desktop\"\r\n\t\t>\r\n\t\t\t@for (btn of secondaryButtons; track $index) {\r\n\t\t\t<app-button\r\n\t\t\t\t[button]=\"btn\"\r\n\t\t\t\t[index]=\"$index\"\r\n\t\t\t\t(buttonClick)=\"onSecondaryClick(btn, $index)\"\r\n\t\t\t/>\r\n\r\n\t\t\t<!-- <button\r\n\t\t\t\tclass=\"secondary-btn\"\r\n\t\t\t\t[disabled]=\"btn.disabled\"\r\n\t\t\t\t(click)=\"onSecondaryClick(btn, $index)\"\r\n\t\t\t>\r\n\t\t\t\t@if (btn.icon) {\r\n\t\t\t\t<span\r\n\t\t\t\t\tclass=\"icon\"\r\n\t\t\t\t\t[class]=\"btn.icon\"\r\n\t\t\t\t></span>\r\n\t\t\t\t}\r\n\t\t\t\t<span class=\"btn-label\">{{ btn.label }}</span>\r\n\t\t\t</button> -->\r\n\t\t\t}\r\n\t\t</ng-container>\r\n\t\t<!-- Botón de menú (solo mobile) -->\r\n\t\t<button\r\n\t\t\tclass=\"secondary-btn menu-btn\"\r\n\t\t\t(click)=\"toggleMenu()\"\r\n\t\t>\r\n\t\t\t<span class=\"icon fa fa-ellipsis-v\"></span>\r\n\t\t</button>\r\n\t\t<!-- Menú superpuesto -->\r\n\t\t<div\r\n\t\t\tclass=\"mobile-menu\"\r\n\t\t\t*ngIf=\"showMenu\"\r\n\t\t>\r\n\t\t\t@for (btn of secondaryButtons; track $index) {\r\n\t\t\t<button\r\n\t\t\t\tclass=\"secondary-btn\"\r\n\t\t\t\t[disabled]=\"btn.disabled\"\r\n\t\t\t\t(click)=\"onSecondaryClickMobile(btn, $index)\"\r\n\t\t\t>\r\n\t\t\t\t@if (btn.icon) {\r\n\t\t\t\t<span\r\n\t\t\t\t\tclass=\"icon\"\r\n\t\t\t\t\t[class]=\"btn.icon\"\r\n\t\t\t\t></span>\r\n\t\t\t\t}\r\n\t\t\t\t<span class=\"btn-label\">{{ btn.label }}</span>\r\n\t\t\t</button>\r\n\t\t\t}\r\n\t\t</div>\r\n\t</div>\r\n</nav>\r\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\r\n\tproviders: [\r\n\t\tprovideZoneChangeDetection({ eventCoalescing: true }),\r\n\t\tprovideRouter(routes),\r\n\t\tprovideHttpClient(\r\n\t\t\twithInterceptors([authInterceptorFn, spinnerInterceptorFn])\r\n\t\t),\r\n\t\tprovideStore(),\r\n\t\tprovideState({ name: \"app\", reducer: appReducer }),\r\n\t\tprovideState({ name: \"auth\", reducer: authReducer }),\r\n\t\tprovideState({ name: \"canchas\", reducer: canchasReducer }),\r\n\t\tprovideEffects([AuthEffects, AppEffects, CanchasEffects]),\r\n\t\tprovideStoreDevtools({\r\n\t\t\tmaxAge: 25,\r\n\t\t\tautoPause: true,\r\n\t\t\tlogOnly: false,\r\n\t\t}),\r\n\t\tprovideAppInitializer(() => {\r\n\t\t\tconst authService = inject(AuthService);\r\n\t\t\treturn authService.loadUserFromToken();\r\n\t\t}),\r\n\t],\r\n}"
            },
            {
                "name": "appInit",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state/app.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\"[App] Init\")"
            },
            {
                "name": "appInitFailure",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state/app.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n\t\"[App] Init Failure\",\r\n\tprops<{ error: string }>()\r\n)"
            },
            {
                "name": "appInitSuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state/app.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\"[App] Init Success\")"
            },
            {
                "name": "appReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state/app.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\r\n\tinitialAppState,\r\n\ton(appInit, (state) => ({ ...state, initialized: false, error: null })),\r\n\ton(appInitSuccess, (state) => ({ ...state, initialized: true, error: null })),\r\n\ton(appInitFailure, (state, { error }) => ({\r\n\t\t...state,\r\n\t\tinitialized: false,\r\n\t\terror,\r\n\t}))\r\n)"
            },
            {
                "name": "authGuard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/auth/auth.guard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "CanActivateFn",
                "defaultValue": "(route, state) => {\r\n\tconst store = inject(Store);\r\n\treturn store.select(selectUserLoggedIn).pipe(\r\n\t\ttake(1),\r\n\t\tmap((isLoggedIn) => {\r\n\t\t\tif (!isLoggedIn) {\r\n\t\t\t\twindow.location.href = \"/login\";\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t})\r\n\t);\r\n}"
            },
            {
                "name": "authInterceptorFn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/auth/auth.interceptor.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "HttpInterceptorFn",
                "defaultValue": "(req, next) => {\r\n\tconst authService = inject(AuthService);\r\n\tconst token = authService.getToken();\r\n\tlet authReq = req;\r\n\tif (token) {\r\n\t\tauthReq = req.clone({\r\n\t\t\tsetHeaders: {\r\n\t\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\treturn next(authReq);\r\n}"
            },
            {
                "name": "authReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/auth/state/auth.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\r\n\tinitialAuthState,\r\n\ton(AuthActions.LoginActions.success, (state, action) => ({\r\n\t\t...state,\r\n\t\ttoken: action.token,\r\n\t\trefreshToken: action.refreshToken,\r\n\t\tuserData: action.userData,\r\n\t\tloading: false,\r\n\t})),\r\n\ton(AuthActions.setAuthTokens, (state, { token, refreshToken }) => ({\r\n\t\t...state,\r\n\t\ttoken,\r\n\t\trefreshToken,\r\n\t})),\r\n\ton(AuthActions.clearAuth, () => initialAuthState),\r\n\ton(AuthActions.setUserData, (state, { userData }) => ({\r\n\t\t...state,\r\n\t\tuserData,\r\n\t})),\r\n\ton(AuthActions.loadUserFromToken, (state) => ({ ...state, loading: true })),\r\n\ton(AuthActions.loadUserFromTokenSuccess, (state, { userData }) => ({\r\n\t\t...state,\r\n\t\tuserData,\r\n\t\tloading: false,\r\n\t})),\r\n\ton(AuthActions.loadUserFromTokenFailure, (state) => ({\r\n\t\t...state,\r\n\t\tuserData: null,\r\n\t\tloading: false,\r\n\t}))\r\n)"
            },
            {
                "name": "canchasLoaded",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modulos/canchas/state/canchas.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n\t\"[Canchas] Canchas Loaded\",\r\n\tprops<{ canchas: Cancha[]; totalCount: number }>()\r\n)"
            },
            {
                "name": "canchasReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modulos/canchas/state/canchas.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\r\n\tinitialCanchasState,\r\n\ton(canchasLoaded, (state, action) => ({\r\n\t\t...state,\r\n\t\tcanchas: action.canchas,\r\n\t\ttotalCount: action.totalCount,\r\n\t}))\r\n)"
            },
            {
                "name": "clearAuth",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/auth/state/auth.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\"[Auth] Clear Auth\")"
            },
            {
                "name": "crearCancha",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modulos/canchas/state/canchas.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n\t\"[Canchas] Crear Cancha\",\r\n\tprops<{ tipoSuelo: number }>()\r\n)"
            },
            {
                "name": "initCanchas",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modulos/canchas/state/canchas.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\"[Canchas] Init Canchas\")"
            },
            {
                "name": "initialAppState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state/app.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "AppState",
                "defaultValue": "{\r\n\tinitialized: false,\r\n\terror: null,\r\n}"
            },
            {
                "name": "initialAuthState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/auth/state/auth.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "AuthState",
                "defaultValue": "{\r\n\ttoken: null,\r\n\trefreshToken: null,\r\n\tuserData: null,\r\n\tloading: false,\r\n}"
            },
            {
                "name": "initialCanchasState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modulos/canchas/state/canchas.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "CanchasState",
                "defaultValue": "{\r\n\tcanchas: [],\r\n\tpageNumber: 1,\r\n\tpageSize: 10,\r\n\ttotalCount: 0,\r\n\tloading: false,\r\n\terror: null,\r\n}"
            },
            {
                "name": "listActions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/list/state/list.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createActionGroup({\r\n    source: 'List',\r\n    events: {\r\n        'editButtonClicked': props<{rowId: number | string}>(),\r\n        'deleteButtonClicked': props<{rowId: number | string}>(),\r\n        'pageChanged': props<{\r\n            pageIndex: number;\r\n            pageSize: number;\r\n            listId: string;\r\n        }>(),\r\n    }\r\n})"
            },
            {
                "name": "loadUserFromToken",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/auth/state/auth.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\"[Auth] Load User From Token\")"
            },
            {
                "name": "loadUserFromTokenFailure",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/auth/state/auth.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n\t\"[Auth] Load User From Token Failure\"\r\n)"
            },
            {
                "name": "loadUserFromTokenSuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/auth/state/auth.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n\t\"[Auth] Load User From Token Success\",\r\n\tprops<{ userData: UserData }>()\r\n)"
            },
            {
                "name": "LoginActions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/auth/state/auth.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createActionGroup({\r\n\tsource: \"Auth\",\r\n\tevents: {\r\n\t\trequest: props<{ email: string; password: string }>(),\r\n\t\tsuccess: props<{\r\n\t\t\ttoken: string;\r\n\t\t\trefreshToken: string;\r\n\t\t\tuserData: UserData;\r\n\t\t}>(),\r\n\t\tfailure: props<{ error: any }>(),\r\n\t},\r\n})"
            },
            {
                "name": "origSetAttribute",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/main.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "document.body.setAttribute"
            },
            {
                "name": "selectAppError",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state/app.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(selectAppState, (s) => s.error)"
            },
            {
                "name": "selectAppInitialized",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state/app.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n\tselectAppState,\r\n\t(s) => s.initialized\r\n)"
            },
            {
                "name": "selectAppState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/state/app.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<AppState>(\"app\")"
            },
            {
                "name": "selectAuthLoading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/auth/state/auth.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n\tselectAuthState,\r\n\t(state) => state.loading\r\n)"
            },
            {
                "name": "selectAuthState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/auth/state/auth.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<AuthState>(\"auth\")"
            },
            {
                "name": "selectAuthToken",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/auth/state/auth.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n\tselectAuthState,\r\n\t(state) => state.token\r\n)"
            },
            {
                "name": "selectCanchas",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modulos/canchas/state/canchas.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n\tselectCanchasState,\r\n\t(state) => state.canchas\r\n)"
            },
            {
                "name": "selectCanchasError",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modulos/canchas/state/canchas.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n\tselectCanchasState,\r\n\t(state) => state.error\r\n)"
            },
            {
                "name": "selectCanchasLoading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modulos/canchas/state/canchas.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n\tselectCanchasState,\r\n\t(state) => state.loading\r\n)"
            },
            {
                "name": "selectCanchasState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modulos/canchas/state/canchas.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<CanchasState>(\"canchas\")"
            },
            {
                "name": "selectPageNumber",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modulos/canchas/state/canchas.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n\tselectCanchasState,\r\n\t(state) => state.pageNumber\r\n)"
            },
            {
                "name": "selectPageSize",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modulos/canchas/state/canchas.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n\tselectCanchasState,\r\n\t(state) => state.pageSize\r\n)"
            },
            {
                "name": "selectRefreshToken",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/auth/state/auth.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n\tselectAuthState,\r\n\t(state) => state.refreshToken\r\n)"
            },
            {
                "name": "selectTotalCount",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modulos/canchas/state/canchas.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n\tselectCanchasState,\r\n\t(state) => state.totalCount\r\n)"
            },
            {
                "name": "selectTotalPages",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modulos/canchas/state/canchas.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n\tselectCanchasState,\r\n\t(state) => state.totalCount / state.pageSize || 1\r\n)"
            },
            {
                "name": "selectUserData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/auth/state/auth.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n\tselectAuthState,\r\n\t(state) => state.userData\r\n)"
            },
            {
                "name": "selectUserLoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/auth/state/auth.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n\tselectAuthState,\r\n\t(state) => !!state.token && !!state.userData\r\n)"
            },
            {
                "name": "setAuthTokens",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/auth/state/auth.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n\t\"[Auth] Set Tokens\",\r\n\tprops<{ token: string; refreshToken: string }>()\r\n)"
            },
            {
                "name": "setUserData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/auth/state/auth.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n\t\"[Auth] Set User Data\",\r\n\tprops<{ userData: UserData }>()\r\n)"
            },
            {
                "name": "spinnerInterceptorFn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/auth/spinner.interceptor.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "HttpInterceptorFn",
                "defaultValue": "(req, next) => {\r\n\tconst spinner = inject(SpinnerService);\r\n\tspinner.show();\r\n\treturn next(req).pipe(finalize(() => spinner.hide()));\r\n}"
            },
            {
                "name": "TOPBAR_BUTTONS_IDS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/topbar/topbar-buttons-ids.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n\thomeButton: \"home-button\",\r\n\tprofileButton: \"profile-button\",\r\n\tloginButton: \"login-button\",\r\n\tlogoutButton: \"logout-button\",\r\n\tregisterButton: \"register-button\",\r\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "ListRow",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "T",
                "file": "src/app/components/list/models.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "LoginButton",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "ButtonWithId",
                "file": "src/app/components/buttons/button.interfaces.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "RegisterButton",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "ButtonWithId",
                "file": "src/app/components/buttons/button.interfaces.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "TopbarButton",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "ButtonWithId",
                "file": "src/app/components/buttons/button.interfaces.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "TopbarButtonClickEvent",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/shell/shell.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "TopbarButtonClickEvent",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "ButtonClickEvent",
                "file": "src/app/components/buttons/button.interfaces.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [
            {
                "name": "TipoSuelo",
                "childs": [
                    {
                        "name": "Polvo de Ladrillo",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 1
                    },
                    {
                        "name": "Hormigon",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 2
                    },
                    {
                        "name": "Cesped",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 3
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/modulos/canchas/models/models.ts"
            }
        ],
        "groupedVariables": {
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\r\n\tproviders: [\r\n\t\tprovideZoneChangeDetection({ eventCoalescing: true }),\r\n\t\tprovideRouter(routes),\r\n\t\tprovideHttpClient(\r\n\t\t\twithInterceptors([authInterceptorFn, spinnerInterceptorFn])\r\n\t\t),\r\n\t\tprovideStore(),\r\n\t\tprovideState({ name: \"app\", reducer: appReducer }),\r\n\t\tprovideState({ name: \"auth\", reducer: authReducer }),\r\n\t\tprovideState({ name: \"canchas\", reducer: canchasReducer }),\r\n\t\tprovideEffects([AuthEffects, AppEffects, CanchasEffects]),\r\n\t\tprovideStoreDevtools({\r\n\t\t\tmaxAge: 25,\r\n\t\t\tautoPause: true,\r\n\t\t\tlogOnly: false,\r\n\t\t}),\r\n\t\tprovideAppInitializer(() => {\r\n\t\t\tconst authService = inject(AuthService);\r\n\t\t\treturn authService.loadUserFromToken();\r\n\t\t}),\r\n\t],\r\n}"
                }
            ],
            "src/app/state/app.actions.ts": [
                {
                    "name": "appInit",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state/app.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\"[App] Init\")"
                },
                {
                    "name": "appInitFailure",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state/app.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n\t\"[App] Init Failure\",\r\n\tprops<{ error: string }>()\r\n)"
                },
                {
                    "name": "appInitSuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state/app.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\"[App] Init Success\")"
                }
            ],
            "src/app/state/app.reducer.ts": [
                {
                    "name": "appReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state/app.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\r\n\tinitialAppState,\r\n\ton(appInit, (state) => ({ ...state, initialized: false, error: null })),\r\n\ton(appInitSuccess, (state) => ({ ...state, initialized: true, error: null })),\r\n\ton(appInitFailure, (state, { error }) => ({\r\n\t\t...state,\r\n\t\tinitialized: false,\r\n\t\terror,\r\n\t}))\r\n)"
                },
                {
                    "name": "initialAppState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state/app.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AppState",
                    "defaultValue": "{\r\n\tinitialized: false,\r\n\terror: null,\r\n}"
                }
            ],
            "src/app/auth/auth.guard.ts": [
                {
                    "name": "authGuard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/auth/auth.guard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CanActivateFn",
                    "defaultValue": "(route, state) => {\r\n\tconst store = inject(Store);\r\n\treturn store.select(selectUserLoggedIn).pipe(\r\n\t\ttake(1),\r\n\t\tmap((isLoggedIn) => {\r\n\t\t\tif (!isLoggedIn) {\r\n\t\t\t\twindow.location.href = \"/login\";\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t})\r\n\t);\r\n}"
                }
            ],
            "src/app/auth/auth.interceptor.ts": [
                {
                    "name": "authInterceptorFn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/auth/auth.interceptor.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HttpInterceptorFn",
                    "defaultValue": "(req, next) => {\r\n\tconst authService = inject(AuthService);\r\n\tconst token = authService.getToken();\r\n\tlet authReq = req;\r\n\tif (token) {\r\n\t\tauthReq = req.clone({\r\n\t\t\tsetHeaders: {\r\n\t\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\treturn next(authReq);\r\n}"
                }
            ],
            "src/app/auth/state/auth.reducer.ts": [
                {
                    "name": "authReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/auth/state/auth.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\r\n\tinitialAuthState,\r\n\ton(AuthActions.LoginActions.success, (state, action) => ({\r\n\t\t...state,\r\n\t\ttoken: action.token,\r\n\t\trefreshToken: action.refreshToken,\r\n\t\tuserData: action.userData,\r\n\t\tloading: false,\r\n\t})),\r\n\ton(AuthActions.setAuthTokens, (state, { token, refreshToken }) => ({\r\n\t\t...state,\r\n\t\ttoken,\r\n\t\trefreshToken,\r\n\t})),\r\n\ton(AuthActions.clearAuth, () => initialAuthState),\r\n\ton(AuthActions.setUserData, (state, { userData }) => ({\r\n\t\t...state,\r\n\t\tuserData,\r\n\t})),\r\n\ton(AuthActions.loadUserFromToken, (state) => ({ ...state, loading: true })),\r\n\ton(AuthActions.loadUserFromTokenSuccess, (state, { userData }) => ({\r\n\t\t...state,\r\n\t\tuserData,\r\n\t\tloading: false,\r\n\t})),\r\n\ton(AuthActions.loadUserFromTokenFailure, (state) => ({\r\n\t\t...state,\r\n\t\tuserData: null,\r\n\t\tloading: false,\r\n\t}))\r\n)"
                },
                {
                    "name": "initialAuthState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/auth/state/auth.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AuthState",
                    "defaultValue": "{\r\n\ttoken: null,\r\n\trefreshToken: null,\r\n\tuserData: null,\r\n\tloading: false,\r\n}"
                }
            ],
            "src/app/modulos/canchas/state/canchas.actions.ts": [
                {
                    "name": "canchasLoaded",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modulos/canchas/state/canchas.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n\t\"[Canchas] Canchas Loaded\",\r\n\tprops<{ canchas: Cancha[]; totalCount: number }>()\r\n)"
                },
                {
                    "name": "crearCancha",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modulos/canchas/state/canchas.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n\t\"[Canchas] Crear Cancha\",\r\n\tprops<{ tipoSuelo: number }>()\r\n)"
                },
                {
                    "name": "initCanchas",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modulos/canchas/state/canchas.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\"[Canchas] Init Canchas\")"
                }
            ],
            "src/app/modulos/canchas/state/canchas.reducer.ts": [
                {
                    "name": "canchasReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modulos/canchas/state/canchas.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\r\n\tinitialCanchasState,\r\n\ton(canchasLoaded, (state, action) => ({\r\n\t\t...state,\r\n\t\tcanchas: action.canchas,\r\n\t\ttotalCount: action.totalCount,\r\n\t}))\r\n)"
                },
                {
                    "name": "initialCanchasState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modulos/canchas/state/canchas.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CanchasState",
                    "defaultValue": "{\r\n\tcanchas: [],\r\n\tpageNumber: 1,\r\n\tpageSize: 10,\r\n\ttotalCount: 0,\r\n\tloading: false,\r\n\terror: null,\r\n}"
                }
            ],
            "src/app/auth/state/auth.actions.ts": [
                {
                    "name": "clearAuth",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/auth/state/auth.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\"[Auth] Clear Auth\")"
                },
                {
                    "name": "loadUserFromToken",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/auth/state/auth.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\"[Auth] Load User From Token\")"
                },
                {
                    "name": "loadUserFromTokenFailure",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/auth/state/auth.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n\t\"[Auth] Load User From Token Failure\"\r\n)"
                },
                {
                    "name": "loadUserFromTokenSuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/auth/state/auth.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n\t\"[Auth] Load User From Token Success\",\r\n\tprops<{ userData: UserData }>()\r\n)"
                },
                {
                    "name": "LoginActions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/auth/state/auth.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createActionGroup({\r\n\tsource: \"Auth\",\r\n\tevents: {\r\n\t\trequest: props<{ email: string; password: string }>(),\r\n\t\tsuccess: props<{\r\n\t\t\ttoken: string;\r\n\t\t\trefreshToken: string;\r\n\t\t\tuserData: UserData;\r\n\t\t}>(),\r\n\t\tfailure: props<{ error: any }>(),\r\n\t},\r\n})"
                },
                {
                    "name": "setAuthTokens",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/auth/state/auth.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n\t\"[Auth] Set Tokens\",\r\n\tprops<{ token: string; refreshToken: string }>()\r\n)"
                },
                {
                    "name": "setUserData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/auth/state/auth.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n\t\"[Auth] Set User Data\",\r\n\tprops<{ userData: UserData }>()\r\n)"
                }
            ],
            "src/app/components/list/state/list.actions.ts": [
                {
                    "name": "listActions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/list/state/list.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createActionGroup({\r\n    source: 'List',\r\n    events: {\r\n        'editButtonClicked': props<{rowId: number | string}>(),\r\n        'deleteButtonClicked': props<{rowId: number | string}>(),\r\n        'pageChanged': props<{\r\n            pageIndex: number;\r\n            pageSize: number;\r\n            listId: string;\r\n        }>(),\r\n    }\r\n})"
                }
            ],
            "src/main.ts": [
                {
                    "name": "origSetAttribute",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/main.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "document.body.setAttribute"
                }
            ],
            "src/app/state/app.selectors.ts": [
                {
                    "name": "selectAppError",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state/app.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(selectAppState, (s) => s.error)"
                },
                {
                    "name": "selectAppInitialized",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state/app.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n\tselectAppState,\r\n\t(s) => s.initialized\r\n)"
                },
                {
                    "name": "selectAppState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/state/app.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<AppState>(\"app\")"
                }
            ],
            "src/app/auth/state/auth.selectors.ts": [
                {
                    "name": "selectAuthLoading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/auth/state/auth.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n\tselectAuthState,\r\n\t(state) => state.loading\r\n)"
                },
                {
                    "name": "selectAuthState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/auth/state/auth.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<AuthState>(\"auth\")"
                },
                {
                    "name": "selectAuthToken",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/auth/state/auth.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n\tselectAuthState,\r\n\t(state) => state.token\r\n)"
                },
                {
                    "name": "selectRefreshToken",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/auth/state/auth.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n\tselectAuthState,\r\n\t(state) => state.refreshToken\r\n)"
                },
                {
                    "name": "selectUserData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/auth/state/auth.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n\tselectAuthState,\r\n\t(state) => state.userData\r\n)"
                },
                {
                    "name": "selectUserLoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/auth/state/auth.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n\tselectAuthState,\r\n\t(state) => !!state.token && !!state.userData\r\n)"
                }
            ],
            "src/app/modulos/canchas/state/canchas.selectors.ts": [
                {
                    "name": "selectCanchas",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modulos/canchas/state/canchas.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n\tselectCanchasState,\r\n\t(state) => state.canchas\r\n)"
                },
                {
                    "name": "selectCanchasError",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modulos/canchas/state/canchas.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n\tselectCanchasState,\r\n\t(state) => state.error\r\n)"
                },
                {
                    "name": "selectCanchasLoading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modulos/canchas/state/canchas.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n\tselectCanchasState,\r\n\t(state) => state.loading\r\n)"
                },
                {
                    "name": "selectCanchasState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modulos/canchas/state/canchas.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<CanchasState>(\"canchas\")"
                },
                {
                    "name": "selectPageNumber",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modulos/canchas/state/canchas.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n\tselectCanchasState,\r\n\t(state) => state.pageNumber\r\n)"
                },
                {
                    "name": "selectPageSize",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modulos/canchas/state/canchas.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n\tselectCanchasState,\r\n\t(state) => state.pageSize\r\n)"
                },
                {
                    "name": "selectTotalCount",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modulos/canchas/state/canchas.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n\tselectCanchasState,\r\n\t(state) => state.totalCount\r\n)"
                },
                {
                    "name": "selectTotalPages",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modulos/canchas/state/canchas.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n\tselectCanchasState,\r\n\t(state) => state.totalCount / state.pageSize || 1\r\n)"
                }
            ],
            "src/app/auth/spinner.interceptor.ts": [
                {
                    "name": "spinnerInterceptorFn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/auth/spinner.interceptor.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HttpInterceptorFn",
                    "defaultValue": "(req, next) => {\r\n\tconst spinner = inject(SpinnerService);\r\n\tspinner.show();\r\n\treturn next(req).pipe(finalize(() => spinner.hide()));\r\n}"
                }
            ],
            "src/app/topbar/topbar-buttons-ids.ts": [
                {
                    "name": "TOPBAR_BUTTONS_IDS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/topbar/topbar-buttons-ids.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n\thomeButton: \"home-button\",\r\n\tprofileButton: \"profile-button\",\r\n\tloginButton: \"login-button\",\r\n\tlogoutButton: \"logout-button\",\r\n\tregisterButton: \"register-button\",\r\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {
            "src/app/modulos/canchas/models/models.ts": [
                {
                    "name": "TipoSuelo",
                    "childs": [
                        {
                            "name": "Polvo de Ladrillo",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 1
                        },
                        {
                            "name": "Hormigon",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 2
                        },
                        {
                            "name": "Cesped",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 3
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/modulos/canchas/models/models.ts"
                }
            ]
        },
        "groupedTypeAliases": {
            "src/app/components/list/models.ts": [
                {
                    "name": "ListRow",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "T",
                    "file": "src/app/components/list/models.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/components/buttons/button.interfaces.ts": [
                {
                    "name": "LoginButton",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "ButtonWithId",
                    "file": "src/app/components/buttons/button.interfaces.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                },
                {
                    "name": "RegisterButton",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "ButtonWithId",
                    "file": "src/app/components/buttons/button.interfaces.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                },
                {
                    "name": "TopbarButton",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "ButtonWithId",
                    "file": "src/app/components/buttons/button.interfaces.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                },
                {
                    "name": "TopbarButtonClickEvent",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "ButtonClickEvent",
                    "file": "src/app/components/buttons/button.interfaces.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/shell/shell.component.ts": [
                {
                    "name": "TopbarButtonClickEvent",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/shell/shell.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/auth.guard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "authGuard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/auth.interceptor.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "authInterceptorFn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/auth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthService",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/models.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AuthResponse",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/models.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "LoginRequest",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/models.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "OperationResult",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/models.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "RegisterRequest",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/models.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UserData",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/register/register.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RegisterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/spinner.interceptor.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "spinnerInterceptorFn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/state/auth.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "clearAuth",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/state/auth.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadUserFromToken",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/state/auth.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadUserFromTokenFailure",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/state/auth.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadUserFromTokenSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/state/auth.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoginActions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/state/auth.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "setAuthTokens",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/state/auth.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "setUserData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/state/auth.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthEffects",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/state/auth.reducer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AuthState",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/state/auth.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "authReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/state/auth.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialAuthState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/state/auth.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectAuthLoading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/state/auth.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectAuthState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/state/auth.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectAuthToken",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/state/auth.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectRefreshToken",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/state/auth.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectUserData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/state/auth.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectUserLoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/buttons/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/components/buttons/button.interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ButtonBase",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/components/buttons/button.interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ButtonClickEvent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/buttons/button.interfaces.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ButtonWithId",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/buttons/button.interfaces.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "LoginButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/buttons/button.interfaces.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "RegisterButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/buttons/button.interfaces.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "TopbarButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/buttons/button.interfaces.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "TopbarButtonClickEvent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/list/list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/24",
                "status": "low"
            },
            {
                "filePath": "src/app/components/list/models.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ListColumn",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/list/models.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "ListRow",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/list/state/list.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "listActions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/modal/modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/modulos/canchas/admin-canchas.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AdminCanchasComponent",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "src/app/modulos/canchas/canchas.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CanchasService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/modulos/canchas/crear-cancha-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CrearCanchaModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/modulos/canchas/models/ObtenerCanchasRequest.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CanchasPagedResult",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modulos/canchas/models/ObtenerCanchasRequest.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ObtenerCanchasRequest",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modulos/canchas/models/models.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Cancha",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modulos/canchas/models/models.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CanchaDto",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modulos/canchas/state/canchas.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "canchasLoaded",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modulos/canchas/state/canchas.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "crearCancha",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modulos/canchas/state/canchas.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initCanchas",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modulos/canchas/state/canchas.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CanchasEffects",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/modulos/canchas/state/canchas.reducer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CanchasState",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/modulos/canchas/state/canchas.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "canchasReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modulos/canchas/state/canchas.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialCanchasState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modulos/canchas/state/canchas.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectCanchas",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modulos/canchas/state/canchas.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectCanchasError",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modulos/canchas/state/canchas.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectCanchasLoading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modulos/canchas/state/canchas.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectCanchasState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modulos/canchas/state/canchas.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectPageNumber",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modulos/canchas/state/canchas.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectPageSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modulos/canchas/state/canchas.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectTotalCount",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modulos/canchas/state/canchas.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectTotalPages",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/navigation.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "NavigationService",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/navigation.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "NavigationState",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/perfil/perfil.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PerfilComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/app/shell/shell.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ShellComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shell/shell.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "TopbarButtonClickEvent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/spinner.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SpinnerService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/spinner/spinner.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SpinnerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/state/app.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appInit",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state/app.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appInitFailure",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state/app.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appInitSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state/app.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AppEffects",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/state/app.reducer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AppState",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/state/app.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state/app.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialAppState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state/app.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectAppError",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state/app.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectAppInitialized",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/state/app.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectAppState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/topbar/topbar-buttons-ids.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TOPBAR_BUTTONS_IDS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/topbar/topbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TopbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/main.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "origSetAttribute",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}